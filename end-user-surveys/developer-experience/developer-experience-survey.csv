Timestamp,How large is your engineering organization or department? ,What industry do you work in?,What type of team do you work on?,Do you work for an Observability or APM (monitoring) vendor?,Are you running OpenTelemetry in Production?,Where in your Observability journey is your organization?,Where did you get your day 1 information on getting started with OpenTelemetry? (Select all that apply),Do you use OpenTelemetry SDK directly or via vendor SDK of the languages you use?,What environments are you using the OpenTelemetry collector? (select all that apply),Which collector distribution do you use? ,What programming languages are you using with OpenTelemtery? (select all that apply),Which platforms are you running OpenTelemety on? (select all that apply),What kind of service do you regularly work on? (select all that apply),How complex was it to manually instrument your application with OpenTelemetry?,Did you encounter any issues when manually instrumenting your application?,How complex was it to get started with OpenTelemetry SDK? (skip if you don't use),Did you encounter any issues when installing OpenTelemetry SDK in your application? (select all that apply),How complex was it to get started with auto-instrumentation? (skip if you don't use),Did you encounter any issues when using auto-instrumentation in your application? (select all that apply),How complex was it to get started operating the OpenTelemetry Collector?,Did you encounter any issues when operating the OpenTelemetry Collector? (select all that apply or skip if you don't use a Collector),"What could be changed to improve the developer experience? For example:
- Installation of the SDK for the first time 
- Debugging instrumentation
- Setting up telemetry pipelines using the Collector
- Getting telemetry out of your application
- Configuring and using resource detectors
- Troubleshooting problems during SDK setup
- Configuring instrumentation
- Too difficult to adopt OpenTelemery for all signals (tracing, metrics, logs)"
12/13/2024 9:12:35,100-1000,Technology,DevOps,Yes,No,Intermediate - We are setting up an Observability practice,GitHub,Official OpenTelemetry SDK,Test/Staging,OTel Collector core (otel/opentelemetry-collector),"Go, Java, Python","Kubernetes, AWS, Azure, GCP, VMs",Operations/Infrastructure,3,Context Propagation,3,Documentation was unclear,2,Documentation was unclear,2,No issues,"- Troubleshooting problems during SDK setup

"
12/13/2024 9:21:04,50-100,Technology,Developer,No,Yes,Intermediate - We are setting up an Observability practice,"OpenTelemetry Website, Language implementation documentation page, GitHub",Official OpenTelemetry SDK,"Local, Test/Staging, Production",AWS ADOT,"Go, Javascript/Typescript","AWS serverless environments (Lambda, Fargate, etc.), Vercel","Browser, Backend, Operations/Infrastructure",2,Documentation was unclear,1,Configuring SDK,,Configuring SDK,3,No issues,AutoInstrumentation for go
12/13/2024 9:24:39,>1000,Technology,Observability,No,Yes,Expert - We have a well-established Observability practice,"OpenTelemetry Website, GitHub",Official OpenTelemetry SDK,"Local, Test/Staging, Production",OTel Collector-contrib (otel/opentelemetry-collector-contrib),".NET, Go, Java, Python, Ruby, Rust","Kubernetes, AWS, AWS serverless environments (Lambda, Fargate, etc.), GCP, GCP serverless environment (Cloud Run Functions, etc.), VMs","Backend, Operations/Infrastructure",3,Using Metrics API,2,"Installing instrumentation libraries and plugins, Debugging, Exporting data",3,"Installing plugins, Debugging, Exporting data",3,No issues,Easy documentation 
12/13/2024 9:25:09,>1000,Technology,Observability,Yes,No,Intermediate - We are setting up an Observability practice,"OpenTelemetry Website, Language implementation documentation page, GitHub",Official OpenTelemetry SDK,"Local, Test/Staging",OTel Collector-k8s (otel/opentelemetry-collector-k8s),"Java, Javascript/Typescript, Python, Ruby, Rust","Kubernetes, VMs","Mobile, Browser, Backend, Operations/Infrastructure",4,Enriching auto-generated telemetry,3,Installing instrumentation libraries and plugins,2,Installing plugins,1 (very easy),No issues,We need auto instrumentation for all technologies like java today .
12/13/2024 9:37:28,50-100,Healthcare,DevOps,No,Yes,Beginner - Learning about observability / Have used monitoring tools,"OpenTelemetry Website, GitHub",I don’t know,"Local, Test/Staging, Production",OTel Collector-k8s (otel/opentelemetry-collector-k8s),Java,Kubernetes,Operations/Infrastructure,3,Using Metrics API,3,Installing instrumentation libraries and plugins,3,Debugging,3,Using OpenTelemetry Collector Transforming Language (OTTL),Debugging
12/13/2024 9:48:16,0-50,Technology,Developer,No,Yes,Intermediate - We are setting up an Observability practice,"OpenTelemetry Website, Language implementation documentation page, Vendor documentation",Official OpenTelemetry SDK,"Local, Test/Staging, Production","Both OTel Collector core (local dev) and AWS ADOT (test, staging, production)",".NET, Javascript/Typescript","AWS serverless environments (Lambda, Fargate, etc.), Azure serverless environments (Functions, Azure Container Apps, etc.)","Backend, Operations/Infrastructure",2,Configuring logging bridge,2,Updating libraries that then fall outside of the instrumentation supported versions,,Not using,2,No issues,"Before the Apire dashboard, we found it hard to observe generated telemetry during local dev"
12/13/2024 9:50:32,50-100,Retail,SRE,No,Yes,Intermediate - We are setting up an Observability practice,"OpenTelemetry Website, GitHub",Official OpenTelemetry SDK,Production,OTel Collector-contrib (otel/opentelemetry-collector-contrib),"Go, Java, Javascript/Typescript","Kubernetes, VMs, Bare metal","Mobile, Browser, Backend, Operations/Infrastructure",2,Enriching auto-generated telemetry,2,"Documentation was unclear, Configuring SDK, Installing instrumentation libraries and plugins, Debugging",1,"Documentation was unclear, Configuring SDK, Debugging",2,"Documentation was unclear, Configuring the processors","Unclear how to augment autoinstrumented metrics with custom attributes

Varying levels of compliance across different languages and frameworks"
12/13/2024 9:54:57,0-50,Finance,Developer,No,No,Expert - We have a well-established Observability practice,OpenTelemetry Website,Official OpenTelemetry SDK,We don’t use the OpenTelemetry collector,jaeger,Python,"VMs, docker","Browser, Backend",5,everything,5,"Documentation was unclear, Configuring SDK, Installing instrumentation libraries and plugins, migration from jaeger",4,"Documentation was unclear, Too many steps required, Disabling specific instrumentation libraries, Configuring SDK, Installing instrumentation libraries, Debugging, Exporting data",4,"Documentation was unclear, Configuring the receivers, Configuring the processors, Configuring the connectors",more complete examples
12/13/2024 10:01:20,100-1000,Media,Platform Engineering,No,Yes,Intermediate - We are setting up an Observability practice,"OpenTelemetry Website, Language implementation documentation page, GitHub, Vendor documentation",Official OpenTelemetry SDK,Test/Staging,OTel Collector-k8s (otel/opentelemetry-collector-k8s),"Javascript/Typescript, Python, Rust","Kubernetes, AWS, AWS serverless environments (Lambda, Fargate, etc.)","Backend, Operations/Infrastructure",3,"Many of them, this field should be multiple choice ",3,"Documentation was unclear, Too many steps required, Configuring SDK, Installing instrumentation libraries and plugins, Debugging, Exporting data",3,"Documentation was unclear, Too many steps required, Disabling specific instrumentation libraries, Configuring SDK, Installing instrumentation libraries, Installing plugins, Debugging, Exporting data",4,"Configuring the receivers, Configuring the processors, Configuring the connectors, Configuring to export to vendor, Using OpenTelemetry Collector Transforming Language (OTTL)","I think it’s very confusing to parse all the documentation, make sense of the different level of maturity for different SDKs, plugins etc if you are coming from a vendor proprietary implementation "
12/13/2024 10:08:22,0-50,Technology,Developer,No,No,Intermediate - We are setting up an Observability practice,"OpenTelemetry Website, Language implementation documentation page",Official OpenTelemetry SDK,Local,OTel Collector-contrib (otel/opentelemetry-collector-contrib),Go,AWS,Backend,3,Context Propagation,3,Configuring SDK,,Configuring SDK,3,,K
12/13/2024 10:43:01,50-100,Finance,SRE,No,No,Intermediate - We are setting up an Observability practice,"OpenTelemetry Website, Language implementation documentation page, GitHub, Vendor documentation",Vendor OpenTelemetry SDK,Test/Staging,OTel Collector-contrib (otel/opentelemetry-collector-contrib),.NET,"Azure serverless environments (Functions, Azure Container Apps, etc.)","Browser, Backend, Operations/Infrastructure",3,Using Metrics API,2,Exporting data,2,Configuring SDK,3,"Configuring the receivers, Using OpenTelemetry Collector Transforming Language (OTTL)","Difficult to get good telemetry signals OOB without extensive configuration (transforming traces to metrics to cover basic metrics most observability agent vendors provide by default, easier sensitive data redaction)"
12/13/2024 11:03:49,0-50,Technology,Sales Engineering,Yes,No,Expert - We have a well-established Observability practice,"OpenTelemetry Website, Language implementation documentation page, GitHub",Vendor OpenTelemetry SDK,Test/Staging,OTel Collector OTLP Distro (otel/opentelemetry-collector-otlp),"Go, Java, Python","Kubernetes, AWS, GCP, GCP serverless environment (Cloud Run Functions, etc.)","Backend, Operations/Infrastructure",3,Using Tracing API,4,"Too many steps required, Configuring SDK, Debugging",2,"Installing plugins, Debugging",3,"Configuring the connectors, Using OpenTelemetry Collector Transforming Language (OTTL)",Troubleshooting problems during SDK setup
12/13/2024 11:23:02,>1000,Retail,Observability,No,Yes,Intermediate - We are setting up an Observability practice,"OpenTelemetry Website, GitHub",I don’t know,"Local, Test/Staging, Production",OTel Collector-contrib (otel/opentelemetry-collector-contrib),"Go, Java, Javascript/Typescript, Python","Kubernetes, AWS, AWS serverless environments (Lambda, Fargate, etc.), GCP, GCP serverless environment (Cloud Run Functions, etc.), VMs",Operations/Infrastructure,3,Configuring logging bridge,3,"Documentation was unclear, Too many steps required, Configuring SDK",2,"Documentation was unclear, Disabling specific instrumentation libraries, Configuring SDK",2,"Configuring the receivers, Configuring the processors, Configuring the connectors, Using OpenTelemetry Collector Transforming Language (OTTL)",Getting telemetry out of your application
12/13/2024 11:48:59,>1000,Retail,Observability,No,Yes,Expert - We have a well-established Observability practice,"OpenTelemetry Website, Language implementation documentation page, Vendor documentation",Custom OpenTelemetry SDK,"Local, Test/Staging, Production",Custom build (ocb),".NET, Java, Python, Swift","Kubernetes, GCP, GCP serverless environment (Cloud Run Functions, etc.)","Mobile, Browser, Backend, Operations/Infrastructure",1,Documentation was unclear,1,Documentation was unclear,1,"Documentation was unclear, Configuring SDK, Installing instrumentation libraries",1 (very easy),Using OpenTelemetry Collector Transforming Language (OTTL),Improve code samples
12/13/2024 12:44:52,0-50,Finance,Observability,Yes,Yes,Intermediate - We are setting up an Observability practice,"OpenTelemetry Website, Vendor documentation",Official OpenTelemetry SDK,"Test/Staging, Production",OTel Collector-contrib (otel/opentelemetry-collector-contrib),".NET, Go, Java, Python","AWS, AWS serverless environments (Lambda, Fargate, etc.), VMs","Backend, Operations/Infrastructure",4,Documentation was unclear,3,"Documentation was unclear, Installing instrumentation libraries and plugins",1,Documentation was unclear,2,"Documentation was unclear, Configuring the processors, Configuring to export to vendor, Using OpenTelemetry Collector Transforming Language (OTTL)",Documentation most of all things
12/13/2024 13:42:50,100-1000,Finance,SRE,No,No,Beginner - Learning about observability / Have used monitoring tools,"OpenTelemetry Website, Language implementation documentation page",Official OpenTelemetry SDK,"Local, Test/Staging",AWS ADOT,"Go, Java, Python","Kubernetes, AWS, AWS serverless environments (Lambda, Fargate, etc.)",Mobile,4,Configuring logging bridge,3,"Documentation was unclear, Configuring SDK, Debugging, Exporting data",4,No auto-instrumentation available for Go,3,Using OpenTelemetry Collector Transforming Language (OTTL),"Lack of proper and efficient Lambda Layers for auto instrumentation, especially on Go"
12/13/2024 13:43:34,50-100,Healthcare,Platform Engineering,No,Yes,Beginner - Learning about observability / Have used monitoring tools,"OpenTelemetry Website, CNCF, JUG meetup, open source community",Vendor OpenTelemetry SDK,Production,AWS ADOT,Java,AWS,"Mobile, Browser, Backend, Operations/Infrastructure",2,Documentation could be more clear. Also better and simpler examples,3,"Documentation was unclear, Installing instrumentation libraries and plugins, Debugging",1,"For most of the cases it worked, but it didn’t work it was not easy to find why",,,Reference architecture examples for various cases with standard frameworks and Youtube screencasts would be great additions to get started
12/13/2024 15:45:49,0-50,Technology,Platform Engineering,No,No,Beginner - Learning about observability / Have used monitoring tools,Language implementation documentation page,I don’t know,We don’t use the OpenTelemetry collector,No OpenTelemetry collector,"Go, Java, Javascript/Typescript","Kubernetes, Azure, GCP, Bare metal","Browser, Backend, Operations/Infrastructure",5,Documentation was unclear,5,Too many steps required,5,"Documentation was unclear, Too many steps required, Disabling specific instrumentation libraries, Configuring SDK, Installing plugins, Debugging, Exporting data",5 (very difficult),"Documentation was unclear, Configuring the receivers, Configuring the processors, Configuring the connectors, Configuring the extensions, Configuring to export to vendor, Using OpenTelemetry Collector Transforming Language (OTTL)","Installation of the SDK for the first time 

- Debugging instrumentation

- Setting up telemetry pipelines using the Collector

- Getting telemetry out of your application

- Configuring and using resource detectors

- Troubleshooting problems during SDK setup

- Configuring instrumentation

- Too difficult to adopt OpenTelemery for all signals (tracing, metrics, logs)"
12/13/2024 16:19:54,100-1000,Technology,Developer,No,Yes,Expert - We have a well-established Observability practice,"OpenTelemetry Website, GitHub",Official OpenTelemetry SDK,"Local, Test/Staging, Production",Custom build (ocb),".NET, Go",AWS,"Backend, Operations/Infrastructure",1,Configuring resource detectors,2,Debugging,,Disabling specific instrumentation libraries,2,"Configuring the connectors, Using OpenTelemetry Collector Transforming Language (OTTL)","* Prioritizing OpAmp, enables it to be used in production with very less custom code to manage org wide configuration.

* Stabalize Logs exporter (Datadog)"
12/13/2024 17:10:29,0-50,Technology,Platform Engineering,No,Yes,Beginner - Learning about observability / Have used monitoring tools,OpenTelemetry Website,I don’t know,"Local, Test/Staging, Production",OTel Collector-k8s (otel/opentelemetry-collector-k8s),Go,Kubernetes,"Backend, Operations/Infrastructure",3,Using Metrics API,1,Documentation was unclear,,Documentation was unclear,1 (very easy),Configuring the receivers,not sure how to setup custom pod label export for the k8s helm chart for the file exporter for container logs
12/13/2024 17:48:07,100-1000,Healthcare,DevOps,No,Yes,Intermediate - We are setting up an Observability practice,"Language implementation documentation page, GitHub",Official OpenTelemetry SDK,"Local, Test/Staging, Production",OTel Collector-contrib (otel/opentelemetry-collector-contrib),".NET, Javascript/Typescript","Kubernetes, VMs","Mobile, Browser, Backend",3,Context Propagation,3,"Documentation was unclear, Too many steps required, Debugging",,Not using,3,"Configuring the processors, Using OpenTelemetry Collector Transforming Language (OTTL)",.NET is missing metrics docs. Maturity of otel collector  components have been challeging. 
12/13/2024 18:48:48,50-100,Finance,Platform Engineering,No,Yes,Intermediate - We are setting up an Observability practice,"OpenTelemetry Website, Language implementation documentation page",Official OpenTelemetry SDK,Production,OTel Collector-contrib (otel/opentelemetry-collector-contrib),".NET, Java, Javascript/Typescript","Kubernetes, AWS","Browser, Backend",2,Context Propagation,4,"Debugging, Exporting data",1,Debugging,5 (very difficult),"Configuring the receivers, Configuring the processors",Debugging configuring the otel setup.
12/13/2024 19:14:09,100-1000,Technology,SRE,No,Yes,Expert - We have a well-established Observability practice,"OpenTelemetry Website, GitHub",Official OpenTelemetry SDK,"Local, Test/Staging, Production",OTel Collector-contrib (otel/opentelemetry-collector-contrib),Python,"Kubernetes, GCP",Operations/Infrastructure,5,Documentation was unclear,5,Documentation was unclear,5,Documentation was unclear,5 (very difficult),Documentation was unclear,Better Documentation
12/13/2024 19:47:48,0-50,Technology,Developer,No,Yes,Intermediate - We are setting up an Observability practice,"OpenTelemetry Website, Language implementation documentation page, GitHub",I don’t know,Local,OTel Collector core (otel/opentelemetry-collector),Swift,Kubernetes,"Mobile, Browser, Backend, Operations/Infrastructure",3,No,2,Names of all the relevant classes were confusing ,1,No,1 (very easy),No issues,First time setup and config of exporters etc
12/13/2024 19:59:20,100-1000,Technology,Observability,Yes,Yes,Intermediate - We are setting up an Observability practice,OpenTelemetry Website,Official OpenTelemetry SDK,Production,OTel Collector core (otel/opentelemetry-collector),"Go, Javascript/Typescript, Ruby","Kubernetes, AWS",Backend,5,I’ve hit almost all of these and more ,4,"Documentation was unclear, Too many steps required, Configuring SDK, Installing instrumentation libraries and plugins, Debugging, The happy path experience (auto instrument and then send OTLP to a vendor) is really bad",4,Poor defaults would leak SQL statements with arguments,3,,"Make the happy path easier. Work with library, language, framework, authors to build in the otel-api. Work with platforms to make OTLP streams first-class. Better local tooling like otel-desktop-viewer, otel-cli. I can pipe logs to a file. I should be able to pipe telemetry into something that lets me visualize and explore it. Don’t make me run docker containers or figure out what a jaeger is. Make a VS Code extension. Give me a native app."
12/13/2024 20:18:41,>1000,Technology,Observability,No,Yes,Intermediate - We are setting up an Observability practice,"OpenTelemetry Website, GitHub",Official OpenTelemetry SDK,Production,Custom build (ocb),".NET, Go, Javascript/Typescript, Ruby, Rust","Kubernetes, VMs","Backend, Operations/Infrastructure",3,Enriching auto-generated telemetry,5,"Too many steps required, Configuring SDK, Installing instrumentation libraries and plugins",,Documentation was unclear,1 (very easy),"Documentation was unclear, Configuring the receivers, Configuring the processors, Configuring the connectors, Using OpenTelemetry Collector Transforming Language (OTTL)",We started pretty early on when there wasn’t much available in terms of bootstrapping the SDK. In Golang e.g. we needed to write a hub CJ of boilerplate code to bootstrap the SDK and ended up building a wrapper library. Our users found the API too complicated to use and would make common errors like not sharing the context properly. The code to instrument is very verbose and “gets in the way” of your domain logic. It’s also seemingly impossible to tune the SDK. We don’t know if we’re dropping data or overflowing the buffer without staring at diagnostic logs. We’ve avoided adoption OTel Metrics until the API stabilized but I think we find it extremely complicated compared to statsd. The Tracing API is also just different enough from more familiar log or event style APIs. It adds more mental overhead by disambiguating something that is effectively a structured event with some attributes. Verbosity in semantic conventions has also been challenging. The guidance around using our own company domains for namespaces makes it verbose and adds a lot of overhead to payloads as we push them around the network. It’s a tough trade off from having structured Any types that we could include in messages. I know that these are non trivial problems but i think there are some opportunities to simplify things for OTel 2.0
12/13/2024 23:52:07,100-1000,Finance,Observability,No,Yes,Intermediate - We are setting up an Observability practice,OpenTelemetry Website,Official OpenTelemetry SDK,Production,OTel Collector-k8s (otel/opentelemetry-collector-k8s),"Python, Kotlin","Kubernetes, AWS",Operations/Infrastructure,3,Context Propagation,3,"Documentation was unclear, Debugging",3,"Documentation was unclear, Too many steps required, Configuring SDK",1 (very easy),No issues,Manual span instrumentation to enrich traces  and context propagation.
12/14/2024 1:22:07,0-50,Technology,Platform Engineering,No,Yes,Intermediate - We are setting up an Observability practice,OpenTelemetry Website,Official OpenTelemetry SDK,"Local, Test/Staging, Production",OTel Collector-contrib (otel/opentelemetry-collector-contrib),"Java, Javascript/Typescript, Python",AWS,"Browser, Backend",3,Configuring logging bridge,4,"Configuring SDK, Debugging",2,No,2,No issues,Hands-on tutorials
12/14/2024 11:55:47,100-1000,Technology,Platform Engineering,No,Yes,Intermediate - We are setting up an Observability practice,"OpenTelemetry Website, Language implementation documentation page, GitHub",Official OpenTelemetry SDK,"Test/Staging, Production",OTel Collector-contrib (otel/opentelemetry-collector-contrib),"C++, Go, Javascript/Typescript",Kubernetes,"Backend, Operations/Infrastructure",4,Documentation was unclear,4,"Documentation was unclear, Too many steps required, Configuring SDK, Installing instrumentation libraries and plugins, Debugging, Exporting data",3,"Disabling specific instrumentation libraries, Configuring SDK, Debugging",3,Documentation was unclear,I love OTel. I understand that the surface area is quite big. It's going to get better eventually. Thanks for all the hard work.
12/14/2024 14:39:59,0-50,Technology,DevOps,No,Yes,Intermediate - We are setting up an Observability practice,"OpenTelemetry Website, Vendor documentation",Vendor OpenTelemetry SDK,"Test/Staging, Production",OTel Collector-contrib (otel/opentelemetry-collector-contrib),"Javascript/Typescript, Python","AWS, AWS serverless environments (Lambda, Fargate, etc.)","Browser, Backend, Operations/Infrastructure",4,Context Propagation,4,"Installing instrumentation libraries and plugins, Exporting data",3,"Too many steps required, Disabling specific instrumentation libraries, Installing instrumentation libraries, Debugging, Exporting data, Sending too many spans",3,"Configuring the processors, Using OpenTelemetry Collector Transforming Language (OTTL)",Be more like Sentry. Don’t make the collector be a requirement to filter data. Make it easier to do tail sampling without the collector.
12/14/2024 16:39:00,50-100,Technology,Developer,No,No,Beginner - Learning about observability / Have used monitoring tools,"OpenTelemetry Website, Language implementation documentation page",Official OpenTelemetry SDK,"Local, Test/Staging, Production",OTel Collector-contrib (otel/opentelemetry-collector-contrib),Python,Kubernetes,"Backend, Operations/Infrastructure",2,Documentation was unclear,3,Documentation was unclear,2,"Documentation was unclear, Debugging",1 (very easy),No issues,"Better documentation, especially for logs in Python."
12/15/2024 4:16:27,>1000,Media,DevOps,No,Yes,Expert - We have a well-established Observability practice,"OpenTelemetry Website, GitHub, Vendor documentation",Custom OpenTelemetry SDK,We don’t use the OpenTelemetry collector,Custom build (ocb),"Erlang/Elixir, Go, Java, Javascript/Typescript, PHP","Kubernetes, AWS, AWS serverless environments (Lambda, Fargate, etc.), VMs, Bare metal","Mobile, Browser, Backend, Operations/Infrastructure",4,Documentation was unclear,4,"Documentation was unclear, Configuring SDK, Installing instrumentation libraries and plugins, Debugging, Exporting data, no support for syslogs",5,"Configuring SDK, Installing instrumentation libraries",5 (very difficult),"Documentation was unclear, Configuring the connectors, too many assumptions and undocumented defaults/opinions",documentation and cleaner clients
12/15/2024 5:28:52,>1000,Technology,DevOps,No,No,Beginner - Learning about observability / Have used monitoring tools,"GitHub, Vendor documentation",Official OpenTelemetry SDK,Local,OTel Collector-k8s (otel/opentelemetry-collector-k8s),Go,"Kubernetes, AWS",Backend,3,Using Metrics API,3,Installing instrumentation libraries and plugins,3,Disabling specific instrumentation libraries,3,"Configuring the connectors, Configuring the extensions, Configuring to export to vendor, Using OpenTelemetry Collector Transforming Language (OTTL)",NA
12/15/2024 7:03:44,0-50,Finance,Platform Engineering,No,Yes,Intermediate - We are setting up an Observability practice,OpenTelemetry Website,Official OpenTelemetry SDK,"Local, Test/Staging, Production",OTel Collector-contrib (otel/opentelemetry-collector-contrib),"Go, Julia, Python",AWS,"Backend, Operations/Infrastructure",4,Enriching auto-generated telemetry,4,"Configuring SDK, Exporting data",4,Configuring SDK,5 (very difficult),Configuring the receivers,"The collector was difficult to configure and application libraries gave cryptic errors on connecting with agents.
Fixing issues took days and just throwing things against the wall until they stuck..
Things were difficult to debug.
Julia was not well supported "
12/15/2024 12:37:48,0-50,Technology,Developer,No,Yes,Intermediate - We are setting up an Observability practice,"Language implementation documentation page, blogs, talks",Official OpenTelemetry SDK,We don’t use the OpenTelemetry collector,Azure,".NET, Java, Javascript/Typescript","Azure serverless environments (Functions, Azure Container Apps, etc.)","Browser, Backend",4,Documentation was unclear,4,"Documentation was unclear, Configuring SDK, Installing instrumentation libraries and plugins",3,"Configuring SDK, Debugging",,,Autodiscovery of collectors
12/15/2024 21:53:41,100-1000,Technology,SRE,No,Yes,Intermediate - We are setting up an Observability practice,"OpenTelemetry Website, Language implementation documentation page",Custom OpenTelemetry SDK,"Test/Staging, Production",OTel Collector-contrib (otel/opentelemetry-collector-contrib),"Go, Java, Swift, Scala",Kubernetes,"Backend, Operations/Infrastructure",2,Enriching auto-generated telemetry,3,Debugging,1,No,1 (very easy),No issues,"Too difficult to adopt OpenTelemery for all signals (tracing, metrics, logs)"
12/15/2024 22:28:04,50-100,Finance,Observability,Yes,Yes,Intermediate - We are setting up an Observability practice,GitHub,Official OpenTelemetry SDK,Test/Staging,AWS ADOT,Python,"AWS serverless environments (Lambda, Fargate, etc.)",Backend,2,Using Tracing API,1,Installing instrumentation libraries and plugins,2,Disabling specific instrumentation libraries,1 (very easy),Configuring the processors,First Time is hard
12/16/2024 1:16:36,>1000,Technology,Developer,No,Yes,Intermediate - We are setting up an Observability practice,"OpenTelemetry Website, Language implementation documentation page, GitHub",Custom OpenTelemetry SDK,Local,OTel Collector-contrib (otel/opentelemetry-collector-contrib),Swift,Kubernetes,"Backend, Operations/Infrastructure",2,Context Propagation,3,Configuring SDK,,Too many steps required,2,"Configuring the processors, Configuring the connectors",More tools and examples
12/16/2024 2:03:45,>1000,Technology,Observability,Yes,Yes,Expert - We have a well-established Observability practice,GitHub,Official OpenTelemetry SDK,"Test/Staging, Production",Custom build (ocb),"Go, Ruby",VMs,Backend,2,Documentation was unclear,3,"Configuring SDK, Installing instrumentation libraries and plugins",3,"Too many steps required, Disabling specific instrumentation libraries, Configuring SDK, Debugging",3,,N/A
12/16/2024 3:43:09,100-1000,Finance,Developer,Yes,Yes,Expert - We have a well-established Observability practice,"OpenTelemetry Website, GitHub",Official OpenTelemetry SDK,"Local, Test/Staging, Production",OTel Collector core (otel/opentelemetry-collector),".NET, Javascript/Typescript","AWS, AWS serverless environments (Lambda, Fargate, etc.)","Mobile, Browser, Backend",3,Documentation was unclear,4,"Documentation was unclear, Configuring SDK, Installing instrumentation libraries and plugins, Debugging",2,"Documentation was unclear, Configuring SDK, Debugging",,,Documentation for languages and plugins in those languages 
12/16/2024 8:14:56,0-50,Technology,Developer,No,Yes,Intermediate - We are setting up an Observability practice,"OpenTelemetry Website, Language implementation documentation page, GitHub",Vendor OpenTelemetry SDK,"Local, Test/Staging",OTel Collector core (otel/opentelemetry-collector),Swift,"Kubernetes, Bare metal",Backend,2,Configuring resource detectors,3,Configuring SDK,,n/a,2,Configuring to export to vendor, 
12/16/2024 13:13:45,100-1000,Media,Developer,No,Yes,Expert - We have a well-established Observability practice,Vendor documentation,Official OpenTelemetry SDK,We don’t use the OpenTelemetry collector,No OpenTelemetry collector,"C++, Java, Javascript/Typescript, Python, Rust","AWS, AWS serverless environments (Lambda, Fargate, etc.)","Browser, Backend, Operations/Infrastructure",4,"Documentation was unclear, Enriching auto-generated telemetry, Context Propagation, Using Tracing API",4,"Documentation was unclear, Too many steps required, Configuring SDK, Installing instrumentation libraries and plugins, Debugging, Exporting data",3,"Documentation was unclear, Too many steps required, Disabling specific instrumentation libraries, Installing instrumentation libraries, Debugging, Exporting data",,,"It has improved a lot from when we started 2.5 years ago but the survey was asking about our first experiences. Newbies on my team still find tracing non-intuitive at a detailed level. There's a lot of terminology to learn before you can make effective progress. I'm interested to see what happens in the Rust project with the potential to make tokio-tracing the API over the otel SDK. This feels like a good move to use a familiar and widely-used crate but change the back-end. If this works perhaps, it will spread to other languages. ... We had a hard time getting distributed tracing working with event driven serverless architectures in AWS. Again, probably improved now, but we have written our own wrappers to embed the traceparent in various messaging and queuing services - you don't get this out of the box. ... The greatest challenge now is improving the quality of the tracing. Making use of Semantic Conventions and creating internal company-wide Semantic Attribute libraries for consistency across microservices and product-groups."
12/16/2024 13:55:11,0-50,Technology,Developer,No,Yes,Intermediate - We are setting up an Observability practice,blogs,Official OpenTelemetry SDK,Production,honeycomb,Erlang/Elixir,fly ,Backend,5,"Documentation was unclear, Enriching auto-generated telemetry, Context Propagation, Using Tracing API, Using Metrics API, Configuring logging bridge, Configuring resource detectors",5,"Documentation was unclear, Too many steps required, Configuring SDK, Installing instrumentation libraries and plugins, Debugging, Exporting data",4,"Documentation was unclear, Too many steps required, Disabling specific instrumentation libraries, Configuring SDK, Installing instrumentation libraries, Installing plugins, Debugging",1 (very easy),,"A better SDK, with better docs, and a simple configuration"
12/16/2024 14:00:47,0-50,Technology,Developer,Yes,Yes,Intermediate - We are setting up an Observability practice,OpenTelemetry Website,Official OpenTelemetry SDK,Local,OTel Collector core (otel/opentelemetry-collector),"Go, Javascript/Typescript, Python","AWS serverless environments (Lambda, Fargate, etc.), GCP serverless environment (Cloud Run Functions, etc.)","Browser, Backend",3,"Documentation was unclear, Context Propagation",4,Documentation was unclear,2,Documentation was unclear,1 (very easy),No issues,Configuring instrumentation
12/16/2024 19:25:38,50-100,Technology,other,Yes,Yes,Intermediate - We are setting up an Observability practice,OpenTelemetry Website,Custom OpenTelemetry SDK,Local,OTel Collector-contrib (otel/opentelemetry-collector-contrib),"Java, Python","Kubernetes, Bare metal",Operations/Infrastructure,3,Enriching auto-generated telemetry,3,Installing instrumentation libraries and plugins,2,Debugging,2,Documentation was unclear,Getting telemetry out of your application
12/16/2024 22:52:58,50-100,Advertisement,Developer,No,Yes,Intermediate - We are setting up an Observability practice,OpenTelemetry Website,Official OpenTelemetry SDK,We don’t use the OpenTelemetry collector,No OpenTelemetry collector,"Java, Python, Scala","Kubernetes, AWS, VMs","Browser, Backend",3,Documentation was unclear,2,Too many steps required,1,Disabling specific instrumentation libraries,1 (very easy),No issues,Integration of manual instrumentation with auto instrumentation. How they can work together.
12/17/2024 0:55:51,100-1000,Technology,SRE,No,Yes,Intermediate - We are setting up an Observability practice,GitHub,Official OpenTelemetry SDK,"Test/Staging, Production","Custom build, no ocb","Go, Java, Javascript/Typescript, Python","Kubernetes, AWS, Azure, GCP",Operations/Infrastructure,2,"Enriching auto-generated telemetry, Using Tracing API",3,"Configuring SDK, Installing instrumentation libraries and plugins",3,"Documentation was unclear, Disabling specific instrumentation libraries, Configuring SDK, Exporting data",3,Using OpenTelemetry Collector Transforming Language (OTTL),"Local testing should be easier, more straightforward and useful for actually troubleshooting issues without requiring much e.g. integration with IDEs"
12/17/2024 1:19:46,0-50,Media,Developer,No,Yes,Intermediate - We are setting up an Observability practice,"OpenTelemetry Website, GitHub",I don’t know,"Test/Staging, Production",OTel Collector-contrib (otel/opentelemetry-collector-contrib),Java,VMs,Backend,4,"Documentation was unclear, Context Propagation, Configuring logging bridge",3,"Documentation was unclear, Debugging",2,"Documentation was unclear, Debugging",4,"Documentation was unclear, Configuring the receivers, Configuring the processors, Configuring the extensions, Using OpenTelemetry Collector Transforming Language (OTTL)","First of all: I think OpenTelemetry is great and I try to use it wherever I can. The semantic conventions are very helpful.

But there are some issues I encountered:

* Sometimes it is diffucult to find the relevant documentation. I have to switch between the OTel website and the GitHub repository to find all information.

* It is confusing to have to many OTel Collector distributions. Also the versioning (1.0.0-RCx vs. 0.115.0 for example) is complicated. Why not build one distribution with all modules and only enable the needed modules via configuration?

* I miss concrete configuration examples for OTel Collector in production. For example how to make sure that no data is lost when the backend is not available.

* Suggestion: A collection of ready-to-use configuration snippets for logs of common applications would be helpful. Especially for unstructured logfiles or logs with non-standard named attributes. These snippets could parse the logs and also use attributes that follow the semantic conventions.

* Suggestion: An overview table of all semantic conventions names on one page. This could be helpful because it is searchable in the browser. Also user does not have to know the category."
12/17/2024 1:26:24,>1000,Technology,Developer,Yes,Yes,Expert - We have a well-established Observability practice,"OpenTelemetry Website, Language implementation documentation page",Official OpenTelemetry SDK,We don’t use the OpenTelemetry collector,No OpenTelemetry collector,Go,"Kubernetes, AWS, Azure","Backend, Operations/Infrastructure",2,"Documentation was unclear, Context Propagation",3,"Configuring SDK, Debugging",,not using it,4,"Configuring the receivers, Configuring the processors, Configuring the connectors, Configuring the extensions",improvements to debugging signals export from the SDK or collector
12/17/2024 1:35:08,50-100,Technology,Observability,Yes,Yes,Expert - We have a well-established Observability practice,OpenTelemetry Website,Official OpenTelemetry SDK,"Test/Staging, Production",OTel Collector-contrib (otel/opentelemetry-collector-contrib),"Java, Javascript/Typescript","Kubernetes, AWS serverless environments (Lambda, Fargate, etc.)",Backend,3,"Documentation was unclear, Configuring resource detectors",4,"Documentation was unclear, Too many steps required",3,Installing instrumentation libraries,3,"Documentation was unclear, Configuring the processors, Using OpenTelemetry Collector Transforming Language (OTTL), Unclear when and why to set up multiple collectors for processing steps, order in which processors are configured can be very important","Especially when running in Kubernetes there is a lot of complexity to use auto-instrumention, even if the language supports dynamic loading of libraries like Java or .NET. 

The main problem is that to use the libraries they need to get loaded into the container, this either requires rebuilding images or changing the deployment.

The otel operator tries to help with this, but it can be too complicated to get started with in my experience. There are a lot of details in the auto-instrumentation getting started guide. For example, but it initially only links to a Github repository for the Instrumentation CRD to specify which pods need to be instrumented. Only when I scroll all the way down past all supported languages I find out this can also be done via an annotation.

Overall it can take a long time before a user sees value, no matter which Observability backend is used. It would be much better to document a setup process that has only a few steps (2 or 3) to get to some initial value (i.e. traces and metrics in the observability tool of choice) and from there refer to other resources to do all the customization.

Finally there is no clear best practices for anything. Some vendors document something for their tools, but most of the time every user needs to piece together the best setup from documentation spread over many documentation pages and Github repository READMEs. I doubt most users get to a good setup without a lot of trial and error."
12/17/2024 1:51:50,0-50,other,Developer,No,Yes,Intermediate - We are setting up an Observability practice,OpenTelemetry Website,Official OpenTelemetry SDK,"Test/Staging, Production",OTel Collector core (otel/opentelemetry-collector),"Java, Javascript/Typescript",Kubernetes,Backend,4,Whole specification seems convoluted for newcomers,4,"Documentation was unclear, Too many steps required, Problems with understanding what is what",2,"Undestandaring what's going on - magic on top of magic layered with magic, autoregistered instrumentations, monkey patching and so on",2,Documentation was unclear,Something that's probably not possible - simplification of the spec
12/17/2024 4:03:25,>1000,other,Observability,Yes,No,Beginner - Learning about observability / Have used monitoring tools,"OpenTelemetry Website, GitHub",Custom OpenTelemetry SDK,"Local, Test/Staging",Custom build (ocb),"Go, Java, Python","Kubernetes, AWS, Azure, GCP",Backend,4,"Documentation was unclear, Using Tracing API, Using Metrics API, Configuring logging bridge, 1) Dual stack strategy mechanism on listening port on receiver 2) Example usage missing from documentation view on Jaegar remote sampling extension ",4,"Documentation was unclear, Installing instrumentation libraries and plugins, Debugging",4,Documentation was unclear,3,"Documentation was unclear, Configuring the receivers, Configuring the extensions, Configuring to export to vendor, 1) dual stack support on receivers 2) connection block on one exporter blocks other ",1) Documentation is not clear and not uniform 2) Troubleshooting problems during SDK setup 
12/17/2024 4:34:16,100-1000,Technology,Developer,Yes,No,Expert - We have a well-established Observability practice,"OpenTelemetry Website, GitHub",Official OpenTelemetry SDK,"Test/Staging, Production",Grafana Alloy,Go,"Kubernetes, AWS, Azure, GCP","Backend, Operations/Infrastructure",4,"Documentation was unclear, Configuring logging bridge",3,No,,Not using,,,Better ways to migrate from Jaeger to otel traces. Currently i have to reinstatement my whole app. Not cool.
12/17/2024 5:21:46,100-1000,Technology,Developer,Yes,Yes,Expert - We have a well-established Observability practice,"OpenTelemetry Website, GitHub, Vendor documentation",Official OpenTelemetry SDK,We don’t use the OpenTelemetry collector,Grafana Alloy,Go,"Kubernetes, AWS, Azure, GCP","Backend, Operations/Infrastructure",3,"Documentation was unclear, Using Metrics API",3,"Configuring SDK, Installing instrumentation libraries and plugins",,I haven't used auto-instrumentation,2,No issues,/
12/17/2024 5:41:56,100-1000,Technology,Developer,Yes,Yes,Expert - We have a well-established Observability practice,Vendor documentation,Vendor OpenTelemetry SDK,"Local, Test/Staging, Production",Grafana Alloy,Go,Kubernetes,Backend,3,Documentation was unclear,3,skip,,skip,1 (very easy),Using OpenTelemetry Collector Transforming Language (OTTL),Debugging the otel collector
12/17/2024 6:03:58,100-1000,Technology,Developer,Yes,Yes,Expert - We have a well-established Observability practice,"OpenTelemetry Website, GitHub",Vendor OpenTelemetry SDK,Production,OTel Collector-contrib (otel/opentelemetry-collector-contrib),Go,Kubernetes,"Backend, Operations/Infrastructure",3,Documentation was unclear,3,Documentation was unclear,3,Documentation was unclear,3,Configuring the receivers,Improve the OTLP HTTP exporter to have dynamic number of concurrent requests (e.g. dynamic consumers from queue).
12/17/2024 6:12:18,100-1000,Technology,Developer,Yes,Yes,Expert - We have a well-established Observability practice,"OpenTelemetry Website, GitHub",Official OpenTelemetry SDK,Production,OTel Collector-contrib (otel/opentelemetry-collector-contrib),Go,Kubernetes,Backend,3,"Documentation was unclear, Using Tracing API",3,Configuring SDK,,N/A,2,No issues,"Otel-go tracing API is difficult to discover, partially because of having too many packages that interact with each other."
12/17/2024 7:30:28,100-1000,Healthcare,Developer,No,Yes,Intermediate - We are setting up an Observability practice,"Language implementation documentation page, GitHub, medium",Official OpenTelemetry SDK,"Test/Staging, Production",OTel Collector-contrib (otel/opentelemetry-collector-contrib),Python,AWS,Backend,4,"Documentation was unclear, Context Propagation, Using Tracing API, Using Metrics API",4,Configuring SDK,,Configuring SDK,4,"Documentation was unclear, Configuring the receivers, Configuring the processors, Using OpenTelemetry Collector Transforming Language (OTTL)","It's a major pain to try and use OTEL for a language without a supported sdk in which case I found it easier to just use some other observability standard and sdk. When trying to set up OTEL tools the first time there should be a nice and simple way to just add it to an API route and see the result, it wouldn't be production ready but making it easier to get started allows for easier iterations and POC's."
12/17/2024 8:45:37,0-50,Technology,Sysadmin,Yes,Yes,Expert - We have a well-established Observability practice,OpenTelemetry Website,Official OpenTelemetry SDK,Production,Grafana Alloy,"PHP, Python","Kubernetes, AWS","Backend, Operations/Infrastructure",2,Enriching auto-generated telemetry,2,Installing instrumentation libraries and plugins,2,Installing instrumentation libraries,2,No issues,- Simplify Opentelemetry extension like PHP
12/17/2024 10:31:50,>1000,Technology,DevOps,Yes,Yes,Beginner - Learning about observability / Have used monitoring tools,"OpenTelemetry Website, Language implementation documentation page",Official OpenTelemetry SDK,Production,Grafana Alloy,"Go, Javascript/Typescript",Kubernetes,Backend,4,too many parts embedded in the application instead of the platform,4,Too many steps required,2,Documentation was unclear,4,Configuring the connectors,Let my platform team own the pipeline. Why make every developer manage all of this complexity in exporting?
12/17/2024 10:36:47,0-50,other,Platform Engineering,No,Yes,Intermediate - We are setting up an Observability practice,"Language implementation documentation page, Vendor documentation",Official OpenTelemetry SDK,"Test/Staging, Production",OTel Collector-contrib (otel/opentelemetry-collector-contrib),"Go, Javascript/Typescript, Python","Kubernetes, AWS, AWS serverless environments (Lambda, Fargate, etc.)","Backend, Operations/Infrastructure",4,"Documentation was unclear, Context Propagation, Using Tracing API, Using Metrics API, metrics pre-1.0 to post-1.0",4,"Documentation was unclear, Configuring SDK",3,"Disabling specific instrumentation libraries, Installing instrumentation libraries",4,"Configuring the processors, Configuring the connectors, Using OpenTelemetry Collector Transforming Language (OTTL)","1) More test tooling, e.g. verify that proper signals are being emit during unit tests; 2) making more of the 2nd order tools visible (e.g. resource detectors, I only stumbled upon them accidentally, the docs I originally read did not point them out as a tool); 3) FE / React tracing is pretty horrible; 4) more human-language examples of how to use/aggregate/display/monitor Metrics signals, especially for complex and/or distributed use-cases."
12/17/2024 11:27:54,50-100,Technology,DevOps,No,Yes,Intermediate - We are setting up an Observability practice,"OpenTelemetry Website, GitHub",Official OpenTelemetry SDK,"Test/Staging, Production",OTel Collector-contrib (otel/opentelemetry-collector-contrib),Javascript/Typescript,Kubernetes,"Backend, Operations/Infrastructure",3,Instrumenting with both otel and datadog during a transition was problematic,3,Installing instrumentation libraries and plugins,,n/a,3,"Configuring the processors, Lots of poking through github repos where components reside (otel-collector-contrib usually) not particularly hard. Quality depends on individual components","During the past 1-2 years that I have been using OTEL, the experience has gotten a lot better. The collector has gotten more stable. The distros are sort of nice, although if one mostly matches my use case but I need something from outside of it, then I can't use it. Overall I'm happy with the experience after getting through the learning curve. "
12/18/2024 5:46:07,0-50,Automotive,DevOps,No,No,Beginner - Learning about observability / Have used monitoring tools,OpenTelemetry Website,I don’t know,We don’t use the OpenTelemetry collector,OTel Collector-contrib (otel/opentelemetry-collector-contrib),Python,"VMs, Bare metal",Backend,5,Documentation was unclear,5,Documentation was unclear,5,"Documentation was unclear, Installing instrumentation libraries, Debugging",5 (very difficult),"Documentation was unclear, Configuring the receivers, Configuring the processors, Configuring the connectors, Configuring the extensions",making it easier to use auto instrumentation and to test it/debug it
12/18/2024 7:51:12,0-50,Technology,Developer,No,Yes,Expert - We have a well-established Observability practice,"OpenTelemetry Website, Language implementation documentation page, GitHub",I don’t know,"Test/Staging, Production",OTel Collector-contrib (otel/opentelemetry-collector-contrib),"Go, Python, Swift","Kubernetes, Bare metal",Backend,4,"Context Propagation, Using Tracing API, Using Metrics API, Configuring logging bridge",3,Exporting data,3,Exporting data,2,No issues,Too difficult to adopt OpenTelemery for all signals
12/18/2024 10:37:49,>1000,Technology,Observability,Yes,Yes,Expert - We have a well-established Observability practice,OpenTelemetry Website,Official OpenTelemetry SDK,"Test/Staging, Production",OTel Collector core (otel/opentelemetry-collector),Python,"Kubernetes, AWS, AWS serverless environments (Lambda, Fargate, etc.), VMs","Browser, Backend, Operations/Infrastructure",3,Documentation was unclear,3,Documentation was unclear,3,Documentation was unclear,1 (very easy),Documentation was unclear,Debugging instrumentation
12/18/2024 11:47:44,0-50,other,Platform Engineering,No,Yes,Beginner - Learning about observability / Have used monitoring tools,"OpenTelemetry Website, GitHub",Official OpenTelemetry SDK,"Local, Test/Staging, Production",Grafana Alloy,"C++, .NET, Go, Javascript/Typescript, Lua, Python, Ruby","Kubernetes, Azure, Azure serverless environments (Functions, Azure Container Apps, etc.)","Backend, Operations/Infrastructure",2,"Enriching auto-generated telemetry, Using Metrics API, Configuring logging bridge",2,"Installing instrumentation libraries and plugins, Debugging",2,Debugging,2,"Configuring to export to vendor, Using OpenTelemetry Collector Transforming Language (OTTL)","Debugging instrumentation 
"
12/18/2024 12:56:00,100-1000,Media,Platform Engineering,No,Yes,Expert - We have a well-established Observability practice,"OpenTelemetry Website, Language implementation documentation page, GitHub, Vendor documentation, Otel collector source code",Official OpenTelemetry SDK,"Test/Staging, Production",OTel Collector-contrib (otel/opentelemetry-collector-contrib),"Go, Java, PHP",Kubernetes,"Backend, Operations/Infrastructure",2,Sdk Vs API implementations e.g. Span have different interfaces ,2,Had some funky version conflicts in go ( or c#),1,None ,2,"Generally great experience, but the tail sampler docs were detailed but hard to grasp","I love that the model is the same across all languages, but do wish that api Vs ask split didn't exist, or at least the names given to API structures were different"
12/18/2024 13:32:47,0-50,Technology,Developer,No,Yes,Intermediate - We are setting up an Observability practice,Language implementation documentation page,Official OpenTelemetry SDK,We don’t use the OpenTelemetry collector,No OpenTelemetry collector,"Javascript/Typescript, PHP, Rust","GCP, platform.sh","Mobile, Browser, Backend, Operations/Infrastructure",4,"Documentation was unclear, Enriching auto-generated telemetry, Context Propagation, Using Tracing API, Using Metrics API",2,"Documentation was unclear, Configuring SDK, Installing instrumentation libraries and plugins",2,"Documentation was unclear, Disabling specific instrumentation libraries, Installing instrumentation libraries",3,,The WP auto instrumentation could really be improved.
12/18/2024 13:34:18,100-1000,Technology,SRE,No,Yes,Intermediate - We are setting up an Observability practice,"Language implementation documentation page, GitHub",Official OpenTelemetry SDK,"Local, Test/Staging, Production",Custom build (ocb),"Go, Java, Python","Kubernetes, VMs, Bare metal","Backend, Operations/Infrastructure",3,"Enriching auto-generated telemetry, Context Propagation, Configuring logging bridge",3,Configuring SDK,3,Debugging,2,No issues,Troubleshooting problems during SDK setup
12/18/2024 13:34:54,>1000,Finance,SRE,No,Yes,Beginner - Learning about observability / Have used monitoring tools,Vendor documentation,Official OpenTelemetry SDK,"Test/Staging, Production",OTel Collector-contrib (otel/opentelemetry-collector-contrib),"Go, Java","Kubernetes, AWS serverless environments (Lambda, Fargate, etc.)","Backend, Operations/Infrastructure",5,"Documentation was unclear, Context Propagation",4,"Installing instrumentation libraries and plugins, Debugging",3,Documentation was unclear,3,Configuring to export to vendor,Manual instrumentation in golang
12/18/2024 13:37:13,>1000,Technology,Developer,No,Yes,Expert - We have a well-established Observability practice,"OpenTelemetry Website, LLMs",Official OpenTelemetry SDK,"Test/Staging, Production",OTel Collector OTLP Distro (otel/opentelemetry-collector-otlp),"Javascript/Typescript, Ruby","Kubernetes, GCP, GCP serverless environment (Cloud Run Functions, etc.)","Mobile, Browser, Backend",4,"Documentation was unclear, Context Propagation",3,"Documentation was unclear, Installing instrumentation libraries and plugins, Debugging",2,"Documentation was unclear, Too many steps required, Configuring SDK, Installing instrumentation libraries",4,"Documentation was unclear, Configuring the processors, Configuring the connectors, Configuring to export to vendor","Clearer debugging story, better language specific documentation, explanations of core concepts written for mere mortal consumption. "
12/18/2024 22:29:22,0-50,Advertisement,Platform Engineering,No,Yes,Beginner - Learning about observability / Have used monitoring tools,"OpenTelemetry Website, Language implementation documentation page, Vendor documentation, Random blog articles ",Official OpenTelemetry SDK,"Local, Test/Staging, Production",OTel Collector-contrib (otel/opentelemetry-collector-contrib),"Erlang/Elixir, Javascript/Typescript","AWS, AWS serverless environments (Lambda, Fargate, etc.)","Backend, Operations/Infrastructure",2,"Documentation was unclear, Loss of context so traces didnt have a parent trace",3,Configuring SDK,2,"Disabling specific instrumentation libraries, Configuring SDK",3,Documentation was unclear,Troubleshooting and configuration for lambda
12/18/2024 23:37:03,100-1000,Technology,Observability,No,Yes,Intermediate - We are setting up an Observability practice,"OpenTelemetry Website, GitHub",Official OpenTelemetry SDK,"Test/Staging, Production",OTel Collector-contrib (otel/opentelemetry-collector-contrib),"Java, Javascript/Typescript","Kubernetes, VMs","Browser, Backend, Operations/Infrastructure",3,"Configuring logging bridge, Configuring resource detectors",3,"Configuring SDK, Exporting data",1,"Disabling specific instrumentation libraries, Debugging",2,"Configuring the processors, Using OpenTelemetry Collector Transforming Language (OTTL)",Debugging can be simpler. More advanced processor need to be added. Reduced resource consumption by processors. 
12/19/2024 3:17:02,>1000,Technology,Observability,No,Yes,Expert - We have a well-established Observability practice,OpenTelemetry Website,Official OpenTelemetry SDK,"Local, Test/Staging",OTel Collector-contrib (otel/opentelemetry-collector-contrib),"Java, Python","Kubernetes, AWS, AWS serverless environments (Lambda, Fargate, etc.), Azure, Azure serverless environments (Functions, Azure Container Apps, etc.), GCP, GCP serverless environment (Cloud Run Functions, etc.), VMs, Bare metal","Backend, Operations/Infrastructure",3,"Enriching auto-generated telemetry, Context Propagation",3,"Configuring SDK, Installing instrumentation libraries and plugins",1,"Configuring SDK, Debugging",2,,n/a
12/19/2024 5:04:52,50-100,Technology,DevOps,No,Yes,Intermediate - We are setting up an Observability practice,"Language implementation documentation page, Vendor documentation",Official OpenTelemetry SDK,"Local, Test/Staging, Production",OTel Collector-contrib (otel/opentelemetry-collector-contrib),"Go, Java, Javascript/Typescript, PHP, Python","Kubernetes, AWS, AWS serverless environments (Lambda, Fargate, etc.)","Backend, Operations/Infrastructure",2,Enriching auto-generated telemetry,3,Documentation was unclear,2,"Disabling specific instrumentation libraries, The sheer amount of data it is exposing by default",3,"Documentation was unclear, Configuring the extensions, Using OpenTelemetry Collector Transforming Language (OTTL)","From my side I think that having a more clear documentation would suffice. 
You can have examples both on GitHub and the OpenTelemetry website that when a user runs them (via docker compose for example), they have an environment that shows them Metrics (eg via Prometheus), Logs (eg via OpenSearch or Loki) and Traces (eg via Jaeger) on Grafana. Then, once they have that up and running, you can guide them through what they can change in the Collector to send them to different Telemetry backends, what they would need to configure to enable or disable an instrumentation library etc. 

I think that Grafana's blog post here with an interactive game is a good first step for many devs
https://grafana.com/blog/2024/11/20/metrics-logs-traces-and-mayhem-introducing-an-observability-adventure-game-powered-by-grafana-alloy-and-otel/"
12/19/2024 7:58:39,0-50,Media,Developer,No,Yes,Beginner - Learning about observability / Have used monitoring tools,"OpenTelemetry Website, Language implementation documentation page, GitHub, Vendor documentation",Official OpenTelemetry SDK,"Local, Test/Staging, Production",OTel Collector-contrib (otel/opentelemetry-collector-contrib),Javascript/Typescript,"Kubernetes, AWS","Browser, Backend, Operations/Infrastructure",3,"For me, the most challenging part was to find the correct documentation. I hadn't internalized how API and SDK separate responsibilities.",3,"Documentation was unclear, Configuring SDK, Getting something running was easy, but finding out which configuration would make sense for which environment or use case was more difficult.",3,"Debugging, JS module systems and order of requires.",2,"Configuring the processors, Debugging. Easily seeing input and output (whether process config is working as intended).","Maybe link more often to an overview for beginners giving, describing how everything works together (API, SDK, collector, ...) and where to go next for which cases. At the beginning, it's a bit difficult to know that you're to far down in the documentation. For example, if you've worked on setting up the SDK and want to manual instrumentation next, you first have to know that that's bot.happening in the SDK."
12/19/2024 13:33:36,100-1000,Finance,SRE,No,Yes,Intermediate - We are setting up an Observability practice,"GitHub, Vendor documentation",Official OpenTelemetry SDK,"Test/Staging, Production",Custom build (ocb),"Java, Python",Kubernetes,Operations/Infrastructure,1,Context Propagation,1,Conflicting trace implementation dependencies,1,Debugging,2,"Documentation was unclear, Configuring the processors, Configuring to export to vendor",Better documentation for Processors and scaling Exporters
12/19/2024 19:33:57,0-50,Finance,DevOps,No,No,Intermediate - We are setting up an Observability practice,Vendor documentation,Official OpenTelemetry SDK,"Local, Test/Staging",OTel Collector core (otel/opentelemetry-collector),".NET, Java, Python",VMs,Operations/Infrastructure,3,"Documentation was unclear, Using Tracing API, Using Metrics API, Configuring logging bridge",4,"Documentation was unclear, Installing instrumentation libraries and plugins",,Documentation was unclear,3,"Documentation was unclear, Configuring the receivers","There is too much branching documentation, and it takes forever to complete."
12/19/2024 23:16:03,>1000,Technology,SRE,Yes,No,Intermediate - We are setting up an Observability practice,"OpenTelemetry Website, Language implementation documentation page, GitHub",Official OpenTelemetry SDK,"Local, Test/Staging",OTel Collector core (otel/opentelemetry-collector),".NET, PHP",Kubernetes,"Browser, Backend, Operations/Infrastructure",4,"Documentation was unclear, Enriching auto-generated telemetry, Context Propagation, Using Tracing API, Using Metrics API",3,"Documentation was unclear, Too many steps required, Configuring SDK, Installing instrumentation libraries and plugins, Debugging, Exporting data",3,"Documentation was unclear, Too many steps required, Disabling specific instrumentation libraries, Configuring SDK, Installing instrumentation libraries, Installing plugins, Debugging, Exporting data",3,"Documentation was unclear, Configuring the receivers, Configuring the processors, Configuring the connectors, Configuring the extensions",Documentation and profiling signals
12/20/2024 11:47:58,50-100,Technology,Observability,No,Yes,Intermediate - We are setting up an Observability practice,"OpenTelemetry Website, Language implementation documentation page, GitHub, Vendor documentation, Charity Majors",Official OpenTelemetry SDK,"Test/Staging, Production",OTel Collector-contrib (otel/opentelemetry-collector-contrib),".NET, Java, Javascript/Typescript","Kubernetes, AWS","Browser, Backend, Operations/Infrastructure",4,"Enriching auto-generated telemetry, Context Propagation, Baggage",4,"Debugging, Silently dropping data/attributes when limits hit",3,Overly verbose instrumentation libraries,4,"Documentation was unclear, Configuring the receivers, Configuring the processors, Configuring the extensions","Observing the collector itself is confusing, and only Honeycomb had even a starting point for setting the whole thing up in a way where it had good defaults without completely overwhelming volume coming out. 

It’s way too hard to apply an attribute to all child spans of a trace. Very common use case and we ended up writing a bunch of iterations of custom processors to achieve it.

Debugging the collector is often a case of “deploy to staging and hope it worked” for us. "
12/23/2024 7:21:18,0-50,Hospitality,SRE,No,Yes,Intermediate - We are setting up an Observability practice,"OpenTelemetry Website, Language implementation documentation page",Official OpenTelemetry SDK,"Test/Staging, Production",Grafana Alloy,Javascript/Typescript,"Kubernetes, AWS","Mobile, Backend, Operations/Infrastructure",4,Configuring resource detectors,2,Too many steps required,1,Debugging,4,"Documentation was unclear, Configuring the receivers, Configuring the processors, Configuring the connectors, Configuring the extensions",i dont want to have to configure instrumentation.js for nodejs environment 
12/23/2024 7:37:20,50-100,Manufacturing,Platform Engineering,No,Yes,Intermediate - We are setting up an Observability practice,"OpenTelemetry Website, Language implementation documentation page, GitHub",Official OpenTelemetry SDK,"Test/Staging, Production",OTel Collector-contrib (otel/opentelemetry-collector-contrib),"Go, Javascript/Typescript","Kubernetes, AWS, AWS serverless environments (Lambda, Fargate, etc.), Bare metal","Backend, Operations/Infrastructure",3,"Enriching auto-generated telemetry, Context Propagation, Using Metrics API",4,"Configuring SDK, Debugging, Exporting data",2,Installing instrumentation libraries,3,No issues,Getting good local debugging output: being able to see traces/metrics locally easier without needing to set up a collector + grafana
12/23/2024 7:41:53,50-100,Travel & Leisure,Developer,No,Yes,Intermediate - We are setting up an Observability practice,"OpenTelemetry Website, Vendor documentation",I don’t know,Production,Grafana Alloy,"Java, Kotlin","AWS serverless environments (Lambda, Fargate, etc.)",Backend,3,"Documentation was unclear, Enriching auto-generated telemetry, Using Tracing API",3,"Documentation was unclear, Configuring SDK, Installing instrumentation libraries and plugins, Debugging",2,Disabling specific instrumentation libraries,3,"Documentation was unclear, Using OpenTelemetry Collector Transforming Language (OTTL)",Getting the right telemetry out of the box
12/23/2024 8:05:23,100-1000,Technology,Observability,Yes,Yes,Expert - We have a well-established Observability practice,"OpenTelemetry Website, GitHub",I don’t know,Production,"This should be a checkbox, right? I use Alloy and contrib",Go,"Kubernetes, VMs, Bare metal","Backend, Operations/Infrastructure",5,I'm just using the Prometheus SDKs,5,"Too many steps required, Unfortunately I can't skip because all questions are required.",,I don't use it and can't skip because the questions is marked as required.,2,"No issues, It just takes a while to get used to the Pipeline concept. After that, it's super easy!",I come from the pull-based model. The hardest part is switching the mindset that push-based monitoring requires different kinds of instrumentation. I'm not sure if my difficulties has to do with the SDK itself.
12/23/2024 8:41:32,100-1000,Finance,SRE,No,Yes,Expert - We have a well-established Observability practice,"Language implementation documentation page, Vendor documentation, It was in place when I joined the org.",Official OpenTelemetry SDK,"Local, Test/Staging, Production",OTel Collector-k8s (otel/opentelemetry-collector-k8s),Ruby,"Kubernetes, AWS","Backend, Operations/Infrastructure",4,"Enriching auto-generated telemetry, Context Propagation",4,"Installing instrumentation libraries and plugins, Debugging",2,"Disabling specific instrumentation libraries, Installing instrumentation libraries",3,,Knowing all the general otel concepts seems to be required in order to begin using otel. Can be a large barrier to entry 
12/23/2024 10:28:18,0-50,Technology,DevOps,No,Yes,Intermediate - We are setting up an Observability practice,"OpenTelemetry Website, Language implementation documentation page, GitHub",Vendor OpenTelemetry SDK,We don’t use the OpenTelemetry collector,No OpenTelemetry collector,".NET, Javascript/Typescript","Kubernetes, Azure","Backend, Operations/Infrastructure",2,"Documentation was unclear, Context Propagation",3,N/a,,N/a,3,No issues,Configuring 
12/23/2024 13:57:40,100-1000,Technology,Observability,Yes,Yes,Intermediate - We are setting up an Observability practice,"OpenTelemetry Website, GitHub",Official OpenTelemetry SDK,"Local, Test/Staging, Production",OTel Collector-contrib (otel/opentelemetry-collector-contrib),"C++, Go, Python, Rust","Kubernetes, VMs",Operations/Infrastructure,4,"Documentation was unclear, Context Propagation, Using Tracing API, Using Metrics API",3,"Documentation was unclear, Configuring SDK, Installing instrumentation libraries and plugins",3,"Documentation was unclear, Disabling specific instrumentation libraries, Configuring SDK",3,"Configuring the extensions, Using OpenTelemetry Collector Transforming Language (OTTL)","Keep doc updated and examples, configs in examples should always be complete not only focus on a given processor, Receiver or exporter"
12/23/2024 16:50:59,0-50,Research,Developer,No,No,Beginner - Learning about observability / Have used monitoring tools,Research/online,Custom OpenTelemetry SDK,"We don’t use the OpenTelemetry collector, Local, Test/Staging, Production",No OpenTelemetry collector,"Javascript/Typescript, Python","AWS serverless environments (Lambda, Fargate, etc.)",Backend,3,Documentation was unclear,4,Documentation was unclear,,Documentation was unclear,1 (very easy),,The open source documentation can be improved 
12/23/2024 17:12:15,0-50,other,Developer,No,Yes,Expert - We have a well-established Observability practice,"OpenTelemetry Website, Language implementation documentation page",Official OpenTelemetry SDK,"Local, Test/Staging, Production",OTel Collector-contrib (otel/opentelemetry-collector-contrib),"Go, Java, Javascript/Typescript, Rust","Kubernetes, AWS, AWS serverless environments (Lambda, Fargate, etc.), Bare metal","Mobile, Browser, Backend",3,"Documentation was unclear, Configuring logging bridge",4,"Too many steps required, Installing instrumentation libraries and plugins",,Documentation was unclear,1 (very easy),Configuring the extensions,"Why do much contrib packages? Having a well structured lib would lead to a better dev xp.
Also it would be awesome to have examples on how to export telemetry directly to the backend without using a collector (for serverless applications) "
12/23/2024 17:28:44,>1000,Finance,Observability,No,Yes,Intermediate - We are setting up an Observability practice,"OpenTelemetry Website, Language implementation documentation page, GitHub",Official OpenTelemetry SDK,"Test/Staging, Production",OTel Collector-contrib (otel/opentelemetry-collector-contrib),"Go, Java, Python","Kubernetes, VMs","Browser, Backend, Operations/Infrastructure",3,"Configuring logging bridge, Creating distro version was challenging. Have to use other vendor distro to learn how its done to create one. It will be good to have an example in the official repo explaining the internals",3,"Debugging, We Obsevability team provide a distro version of OpenTelemetry agent . Developers simply follow our 3 steps confluence to enable auto instumentation",2,Debugging,3,Using OpenTelemetry Collector Transforming Language (OTTL),Overall the documentation was clear. Initial learning curve was hard as we started the adoption couple of years back. Tackling breaking changes was bit of a challenge.  Configuring extension with distro is still a challenge as there is no clear documentation on this topic. If we have more SIG meetings during APAC timezone it will be more useful.Thanks a ton for all the hardwork and bringing OpenTelemetry to a state that we can confidently use it in production.
12/23/2024 18:14:27,>1000,Finance,SRE,No,Yes,Intermediate - We are setting up an Observability practice,Language implementation documentation page,Custom OpenTelemetry SDK,Production,OTel Collector-contrib (otel/opentelemetry-collector-contrib),"Go, Java, Python","Kubernetes, VMs","Backend, Operations/Infrastructure",2,Configuring resource detectors,2,NA,1,NA,3,"Documentation was unclear, Configuring the processors",We experimented alot on the processors as we were not clear on the expected outcomes from the documentation
12/23/2024 18:19:43,0-50,Technology,Developer,No,Yes,Intermediate - We are setting up an Observability practice,OpenTelemetry Website,Official OpenTelemetry SDK,Production,OTel Collector-contrib (otel/opentelemetry-collector-contrib),".NET, Javascript/Typescript","Kubernetes, Azure, Azure serverless environments (Functions, Azure Container Apps, etc.)","Browser, Backend, Operations/Infrastructure",4,"Documentation was unclear, Enriching auto-generated telemetry, Context Propagation, Using Tracing API, Using Metrics API, Configuring resource detectors",4,"Documentation was unclear, Configuring SDK, Installing instrumentation libraries and plugins, Debugging",,Documentation was unclear,4,"Documentation was unclear, Configuring the receivers, Configuring the processors, Configuring the connectors, Configuring the extensions, Configuring to export to vendor","Making a more clear path and documentation. Having clear sections with best practices. There are many aspects that you need to put effort into understanding, for example the baggage api or the tracer shim in .net. The explanation is poor. Also the contrib vs core repos make things even more confusing. I understand it's work in progress."
12/23/2024 20:53:31,50-100,other,Developer,No,No,Beginner - Learning about observability / Have used monitoring tools,"OpenTelemetry Website, twitter, conference",Vendor OpenTelemetry SDK,Test/Staging,Custom build (ocb),PHP,"GCP serverless environment (Cloud Run Functions, etc.)",Mobile,3,Configuring resource detectors,3,i'm not using,,i'm not using,3,"Configuring the receivers, Configuring the extensions, Configuring to export to vendor",enrich to debug logging and reporting when encountered an issue by otel collector processor setting
12/23/2024 21:00:00,0-50,Technology,DevOps,No,Yes,Intermediate - We are setting up an Observability practice,"OpenTelemetry Website, Language implementation documentation page",Official OpenTelemetry SDK,We don’t use the OpenTelemetry collector,Grafana Alloy,Go,"Kubernetes, GCP","Backend, Operations/Infrastructure",3,"Enriching auto-generated telemetry, Context Propagation",2,Configuring SDK,,N/A,,,More sophisticated sampling like based on particular code paths or KVs
12/23/2024 22:00:57,0-50,Technology,Developer,No,Yes,Intermediate - We are setting up an Observability practice,"OpenTelemetry Website, GitHub",Official OpenTelemetry SDK,"Local, Test/Staging",Grafana Alloy,"Javascript/Typescript, PHP","Kubernetes, Bare metal","Browser, Backend",4,"Documentation was unclear, Enriching auto-generated telemetry",3,"Documentation was unclear, Debugging, Exporting data",5,Installing instrumentation libraries,1 (very easy),Configuring to export to vendor,"No working examples of applications, to run them locally on docker and debug, to understand how it works. "
12/23/2024 23:22:31,50-100,other,Developer,No,Yes,Intermediate - We are setting up an Observability practice,"Language implementation documentation page, Vendor documentation",Official OpenTelemetry SDK,We don’t use the OpenTelemetry collector,No OpenTelemetry collector,"Javascript/Typescript, PHP",AWS,Backend,3,"Documentation was unclear, Enriching auto-generated telemetry",2,"Configuring SDK, Installing instrumentation libraries and plugins, Debugging",1,Disabling specific instrumentation libraries,1 (very easy),Configuring the extensions,Debugging instrumentation 
12/24/2024 0:35:51,0-50,Technology,Developer,No,Yes,Intermediate - We are setting up an Observability practice,OpenTelemetry Website,Official OpenTelemetry SDK,"Local, Test/Staging, Production",OTel Collector-contrib (otel/opentelemetry-collector-contrib),Go,"Kubernetes, Bare metal","Backend, Operations/Infrastructure",4,Configuring logging bridge,4,Exporting data,,NA,1 (very easy),No issues,clear steps should be given on how to setup production level tracer and logging and metrics
12/24/2024 2:31:14,50-100,Technology,Observability,Yes,No,Expert - We have a well-established Observability practice,"OpenTelemetry Website, Language implementation documentation page, GitHub",Official OpenTelemetry SDK,"Local, Test/Staging",OTel Collector-contrib (otel/opentelemetry-collector-contrib),".NET, Go, Java, Javascript/Typescript, Python, Rust","Kubernetes, Azure, VMs","Browser, Backend, Operations/Infrastructure",3,"Documentation was unclear, Context Propagation, Configuring logging bridge",3,"Documentation was unclear, Installing instrumentation libraries and plugins, Debugging",3,"Documentation was unclear, Too many steps required, Configuring SDK, Installing plugins, Debugging",2,"Documentation was unclear, Configuring the receivers, Configuring the processors, Configuring the extensions",Auto instrumentation should be easy to detect the technology by its own after deploy an agent 
12/24/2024 5:36:20,>1000,Healthcare,Developer,No,Yes,Intermediate - We are setting up an Observability practice,"OpenTelemetry Website, Language implementation documentation page, GitHub",Official OpenTelemetry SDK,"Local, Test/Staging, Production",OTel Collector-contrib (otel/opentelemetry-collector-contrib),Scala,"Kubernetes, VMs","Backend, Operations/Infrastructure",3,"Documentation was unclear, Enriching auto-generated telemetry, Configuring logging bridge",3,"Documentation was unclear, Too many steps required, Installing instrumentation libraries and plugins",2,Documentation was unclear,2,"Documentation was unclear, Configuring the processors",Make configuration and customization of auto instrumentation easier
12/25/2024 1:47:44,0-50,Advertisement,DevOps,Yes,No,Beginner - Learning about observability / Have used monitoring tools,x,I don’t know,Local,No OpenTelemetry collector,Java,Kubernetes,Backend,2,"Using Tracing API, Using Metrics API, Configuring logging bridge",2,Too many steps required,2,"Debugging, Exporting data",2,No issues,x
12/25/2024 6:50:46,0-50,Technology,Developer,No,Yes,Intermediate - We are setting up an Observability practice,OpenTelemetry Website,Official OpenTelemetry SDK,"Local, Production",OTel Collector-contrib (otel/opentelemetry-collector-contrib),Javascript/Typescript,"Bare metal, Docker","Browser, Backend",3,"Documentation was unclear, The examples in the docs are too trivial and I don’t think they are quite right, either. (Rolling a die shouldn’t be a separate service, as presented, for example.)",3,"Documentation was unclear, Configuring SDK, The API for the JS SDK has changed a lot, so every documentation source tells you to do it differently, and there’s no clear API docs.",4,Configuring SDK,2,"There’s no baseline configuration docs, just examples you have to emulate and try to figure out commonalities from. The slash convention for naming connectors is not explained, for example. ","The docs need to be more consistent and allow you to get answers to questions like “wait, what is that portion of the config doing?” I also think they could stand to be a bit more opinionated for someone setting this up for the first time (http vs grpc, etc)."
12/25/2024 9:54:13,100-1000,Technology,SRE,No,Yes,Intermediate - We are setting up an Observability practice,"Language implementation documentation page, GitHub",Official OpenTelemetry SDK,"Test/Staging, Production",OTel Collector-contrib (otel/opentelemetry-collector-contrib),"Go, Java, Javascript/Typescript, Ruby","Kubernetes, AWS","Backend, Operations/Infrastructure",3,"Documentation was unclear, Configuring logging bridge",4,"Documentation was unclear, Installing instrumentation libraries and plugins, Debugging",3,"Documentation was unclear, Configuring SDK, Debugging",2,"Configuring the connectors, Using OpenTelemetry Collector Transforming Language (OTTL)","The documentation is unclear, most of the times is easier to read the collector code than the documentation. Also, debugging is not easy, it’s a tough work"
12/25/2024 21:02:53,0-50,Technology,Developer,No,No,Beginner - Learning about observability / Have used monitoring tools,OpenTelemetry Website,Official OpenTelemetry SDK,"Local, Test/Staging",AWS ADOT,"Python, Rust","AWS, AWS serverless environments (Lambda, Fargate, etc.)","Backend, Operations/Infrastructure",4,Testing and local development,2,"Configuring SDK, Installing instrumentation libraries and plugins",2,Debugging,3,"Configuring the extensions, Configuring to export to vendor","AWS Lambda turned out to be too difficult to adopt, local development integration so problems are noticed right away"
12/27/2024 15:04:25,0-50,Technology,Developer,No,No,Beginner - Learning about observability / Have used monitoring tools,"OpenTelemetry Website, Language implementation documentation page",Official OpenTelemetry SDK,"Local, Test/Staging",OTel Collector core (otel/opentelemetry-collector),"C++, .NET","VMs, Bare metal",Backend,2,No issues,5,"Installing instrumentation libraries and plugins, Development network is Windows and air-gapped so the C++ implementation was very difficult to build. Any chance for release binaries?",,N/A,2,No issues,Installation of the SDK for the first time: was very difficult to get the C++ implementation built on an air-gapped network.
12/29/2024 8:46:36,100-1000,Technology,Developer,No,Yes,Expert - We have a well-established Observability practice,OpenTelemetry Website,Official OpenTelemetry SDK,"Test/Staging, Production",OTel Collector core (otel/opentelemetry-collector),".NET, Javascript/Typescript, Rust","Kubernetes, AWS","Backend, Operations/Infrastructure",4,"Documentation was unclear, Context Propagation, I found that the documentation is not super clearly structured. I had some troubles figuring out that some network proxies / infra component are using b3 as context propagation standard, and it was not immediate to understand how to correlate those information to the classic w3c format ",3,"Configuring SDK, Sometimes it's not super clear how one should configure the SDK, but it varies on the language used. I find the .NET clear, for instance. ",,I don't have experiences with auto instrumentation,2,"I still haven't formed a clear understand of connectors, and where they can really help.","I don't find installing and using OTEL related components very difficult. I've sometimes felt a bit lost in the documentation though. One thing that puzzled me initially was the fact that receivers/processors/exporters are split across main and contrib repos, but then I got used to it. "
12/29/2024 21:54:09,0-50,Finance,Developer,No,Yes,Beginner - Learning about observability / Have used monitoring tools,OpenTelemetry Website,Official OpenTelemetry SDK,We don’t use the OpenTelemetry collector,OTel Collector-contrib (otel/opentelemetry-collector-contrib),"Go, Javascript/Typescript","AWS serverless environments (Lambda, Fargate, etc.)",Backend,2,"Documentation was unclear, Enriching auto-generated telemetry",2,"Documentation was unclear, Debugging",4,Documentation was unclear,5 (very difficult),"Documentation was unclear, Configuring the extensions, Using OpenTelemetry Collector Transforming Language (OTTL)",Debugging instrumentation
12/29/2024 22:32:14,0-50,Technology,DevOps,No,Yes,Intermediate - We are setting up an Observability practice,"OpenTelemetry Website, Language implementation documentation page",Official OpenTelemetry SDK,"Test/Staging, Production",OTel Collector-contrib (otel/opentelemetry-collector-contrib),"Java, PHP","Kubernetes, Azure","Backend, Operations/Infrastructure",5,"Enriching auto-generated telemetry, Using Tracing API, Using Metrics API",3,Debugging,1,"Debugging, Lack of support for the PHP language",4,"Configuring the processors, Configuring the extensions","I have already passed the threshold of being a beginner, and it is somewhat difficult to recall what challenges I faced at the beginning."
12/29/2024 22:45:40,0-50,Technology,SRE,No,Yes,Expert - We have a well-established Observability practice,"OpenTelemetry Website, GitHub, about observability",Official OpenTelemetry SDK,"Local, Test/Staging, Production",AWS ADOT,Java,"Kubernetes, AWS, Azure",Backend,2,"still beta features, but there are so good",2,Installing instrumentation libraries and plugins,2,Disabling specific instrumentation libraries,2,Configuring the processors,"for provisioning observability infrastructure, like ansible terraform, etc."
12/29/2024 23:22:14,100-1000,Finance,DevOps,Yes,Yes,Intermediate - We are setting up an Observability practice,OpenTelemetry Website,Official OpenTelemetry SDK,Production,OTel Collector-k8s (otel/opentelemetry-collector-k8s),Java,Kubernetes,Backend,5,"Using Tracing API, Using Metrics API",3,Installing instrumentation libraries and plugins,1,Disabling specific instrumentation libraries,5 (very difficult),"Documentation was unclear, Configuring the receivers, Configuring the processors, Configuring the connectors, Configuring the extensions, Configuring to export to vendor","More explanations on sampling rates and sampling policies,
and how sampling settings can impact performance.

Provide recommendations and guidance for businesses on how to evaluate sampling rates and sampling policies.
"
12/30/2024 3:12:16,>1000,Finance,SRE,Yes,No,Expert - We have a well-established Observability practice,OpenTelemetry Website,Official OpenTelemetry SDK,"Local, Test/Staging",OTel Collector-contrib (otel/opentelemetry-collector-contrib),Java,Kubernetes,"Backend, Operations/Infrastructure",3,"Context Propagation, Using Tracing API, Using Metrics API, Configuring logging bridge",3,"Documentation was unclear, Debugging, Exporting data",3,"Documentation was unclear, Debugging, Exporting data",4,"Documentation was unclear, Configuring the processors, Configuring the connectors, Configuring to export to vendor","More complete and detailed documentation.
Ability to view logs or screens of input and final output results"
12/30/2024 7:01:05,>1000,Manufacturing,Developer,No,Yes,Beginner - Learning about observability / Have used monitoring tools,OpenTelemetry Website,Official OpenTelemetry SDK,Local,OTel Collector core (otel/opentelemetry-collector),.NET,"VMs, Bare metal",Backend,1,otel collector,1,nothing,5,"Documentation was unclear, Too many steps required, Installing instrumentation libraries, Exporting data",4,"Documentation was unclear, Configuring the receivers, Configuring the processors, Configuring the extensions","simpler Collector cofigurations
"
12/31/2024 10:55:43,100-1000,Technology,Observability,Yes,Yes,Expert - We have a well-established Observability practice,"OpenTelemetry Website, GitHub, Vendor documentation",Official OpenTelemetry SDK,Production,Dynatrace Collector,".NET, Go, Java, Javascript/Typescript, PHP, Python","Kubernetes, VMs","Browser, Backend",5,"Documentation was unclear, Enriching auto-generated telemetry, Context Propagation, Using Tracing API, Using Metrics API, Configuring resource detectors",5,"Documentation was unclear, Too many steps required, Configuring SDK, Installing instrumentation libraries and plugins, Debugging, Exporting data",3,"Documentation was unclear, Configuring SDK, Debugging",4,"Documentation was unclear, Configuring the receivers, Configuring the processors",Auto-instrumentation is too limited and manual instrumentation is too contextual to the application and its classes / methods.
1/1/2025 0:39:38,100-1000,Media,other,No,No,Intermediate - We are setting up an Observability practice,OpenTelemetry Website,Custom OpenTelemetry SDK,"Local, Test/Staging",multiple,"C++, Python","AWS, VMs, Bare metal",custom high performance compute for visual effects,4,annoying that the base documentation and libraries are designed for environments where HPC and raw / bare-metal performance are seemingly less important,3,sdk was fine,,not designed for our compute environment / mode of operation,1 (very easy),"capable and no issues, but struggled w/ otel protocol and not available for all environments","otel is a fantastic idea, would like to see it have a more 'basic' / core implementation rather than all the abstraction layers, everywhere, all at once."
1/1/2025 19:30:08,100-1000,Finance,Platform Engineering,No,Yes,Intermediate - We are setting up an Observability practice,"OpenTelemetry Website, Language implementation documentation page",Official OpenTelemetry SDK,"Test/Staging, Production",Custom build (ocb),"Go, Java","Kubernetes, AWS","Browser, Backend, Operations/Infrastructure",2,Using Metrics API,1,Debugging,1,Debugging,3,"Using OpenTelemetry Collector Transforming Language (OTTL), Bugs, debugging","- Document and standardize the meta-monitoring metrics emitted by application SDKs. For example, RED metrics for an application's OTLP exports 
- More documentation on meta-monitoring the OpenTelemetry collector and its components. For example, common metrics to alert on
- More visibility on unofficial tools that help with generating test data and debugging. There were a few tools I wish I knew about earlier like otel-cli, otel-desktop-viewer, and otelbin.io
- An easier way to test OTTL statements. I eventually learned how to attach a debugger to a locally run OTEL collector so I could step through the OTTL code, but that was a hurdle since I wasn't experienced with golang
- Understanding the implications of cumulative metric temporality (which seems like the default for SDKs) would've been helpful to callout more visibly. I think a lot of engineers are used to thinking in delta temporality, since thats what a lot of vendors accept.
- Guides for tuning collector exporters and the batch processor to handle back-pressure. This feels hard to get right"
1/2/2025 11:24:55,100-1000,Technology,other,No,Yes,Expert - We have a well-established Observability practice,Vendor documentation,Official OpenTelemetry SDK,"Test/Staging, Production",Red Hat Build of OTel Collector,"Java, Python","Kubernetes, AWS, Azure, Bare metal",Backend,3,Documentation was unclear,3,Documentation was unclear,2,Disabling specific instrumentation libraries,2,No issues,More documentation for getting started with.
1/2/2025 11:25:11,0-50,Technology,Developer,No,Yes,Beginner - Learning about observability / Have used monitoring tools,OpenTelemetry Website,Official OpenTelemetry SDK,Production,OTel Collector OTLP Distro (otel/opentelemetry-collector-otlp),"Go, Java, Python, Rust","Kubernetes, AWS",Backend,3,"Documentation was unclear, Library frequently makes sweeping backwards-incompatible changes. Lacks any stability or longevity",3,"Documentation was unclear, Too many steps required",,Don't use - or don't recognise it as something we use,4,"Documentation was unclear, Configuring the receivers","Stop making breaking changes to the libraries every other release. If you insist on having so many different crates for the rust project also just have one crate where we pull things in via features and more example projects. I'm kind of tired of finding a crate I used is now deprecated, moved as a feature into another crate or moved out of a crate into it's own feature.

Also you frequently break the documentation links either by using sealed traits or some sort of semi-private obfuscation method so the docs are near impossible to navigate i.e. getting to builder methods. https://docs.rs/opentelemetry-otlp/0.27.0/opentelemetry_otlp/struct.SpanExporter.html#method.builder take me to the SpanExporterBuilder... oh wait you can't"
1/2/2025 11:43:13,0-50,Technology,Developer,No,Yes,Expert - We have a well-established Observability practice,"OpenTelemetry Website, Language implementation documentation page",Vendor OpenTelemetry SDK,"Local, Test/Staging",OTel Collector core (otel/opentelemetry-collector),.NET,"Kubernetes, Azure, Azure serverless environments (Functions, Azure Container Apps, etc.)",Backend,2,Configuring logging bridge,2,I don't recall,,Did not use,3,Configuring the receivers,It wasn't easy for me to fetch logs in docker compose to the otel collector from output of another service that was only printing them to the output. I managed it finally via some hacks overriding the entrypoint to tee the logs to some file which was eventually in a shared volume with the collector from which the filelog receiver could read. I didn't find much documentation for this case. Overall OTEL works quite nice in the dotnet ecosystem (especially with the newly introduced aspire dashboard)
1/2/2025 12:13:11,100-1000,Technology,Observability,No,Yes,Intermediate - We are setting up an Observability practice,OpenTelemetry Website,Official OpenTelemetry SDK,"Test/Staging, Production",OTel Collector-contrib (otel/opentelemetry-collector-contrib),"Java, Javascript/Typescript, Python","Kubernetes, AWS, VMs","Backend, Operations/Infrastructure",3,"Enriching auto-generated telemetry, Configuring logging bridge",3,Installing instrumentation libraries and plugins,2,Debugging,3,"Configuring the receivers, Configuring the processors, Configuring the connectors, Using OpenTelemetry Collector Transforming Language (OTTL)",Production ready K8s collector setup with agents and gateway
1/2/2025 12:13:44,0-50,other,Developer,No,No,Beginner - Learning about observability / Have used monitoring tools,"OpenTelemetry Website, GitHub",Official OpenTelemetry SDK,"Local, Test/Staging",OTel Collector-contrib (otel/opentelemetry-collector-contrib),.NET,Azure,"Browser, Backend",3,"Enriching auto-generated telemetry, Context Propagation",2,Configuring SDK,,Documentation was unclear,2,"Configuring the receivers, Configuring the connectors, Using OpenTelemetry Collector Transforming Language (OTTL)","- Too difficult to adopt OpenTelemery for all signals (tracing, metrics, logs)"
1/2/2025 12:29:51,>1000,Finance,SRE,Yes,Yes,Expert - We have a well-established Observability practice,"OpenTelemetry Website, Vendor documentation",Vendor OpenTelemetry SDK,Production,AWS ADOT,"Java, Javascript/Typescript, Python","AWS, AWS serverless environments (Lambda, Fargate, etc.)","Browser, Backend, Operations/Infrastructure",4,"Documentation was unclear, Using Tracing API",3,"Documentation was unclear, Too many steps required, Configuring SDK",2,"Documentation was unclear, Disabling specific instrumentation libraries, Configuring SDK",2,"Configuring the receivers, Configuring the processors, Configuring the connectors, Using OpenTelemetry Collector Transforming Language (OTTL)","Improvise documentation.. sample complex application based workshop for practicing implementation from basic to advance in different environment like AWS, azure, kubernetes etc. especially using different otel components"
1/2/2025 13:25:16,0-50,Manufacturing,Developer,No,Yes,Intermediate - We are setting up an Observability practice,"OpenTelemetry Website, GitHub",Official OpenTelemetry SDK,"Local, Test/Staging, Production",OTel Collector-contrib (otel/opentelemetry-collector-contrib),Go,Kubernetes,"Browser, Backend",2,Documentation was unclear,2,"Documentation was unclear, Configuring SDK",,N/A,3,"Documentation was unclear, Configuring the processors, Configuring the extensions","Clearer Dos/Donts, best practices to adhere to, clearer naming conventions "
1/2/2025 15:15:11,0-50,other,Developer,No,Yes,Intermediate - We are setting up an Observability practice,"OpenTelemetry Website, GitHub",Official OpenTelemetry SDK,"Local, Test/Staging, Production",OTel Collector core (otel/opentelemetry-collector),"Go, Java, Javascript/Typescript, Rust","AWS, AWS serverless environments (Lambda, Fargate, etc.)","Mobile, Browser, Backend",2,"Enriching auto-generated telemetry, Configuring logging bridge",2,Installing instrumentation libraries and plugins,,Too many steps required,1 (very easy),No issues,Having more real life examples on how to use/get started withotel
1/2/2025 18:12:10,50-100,Finance,Operations,Yes,Yes,Beginner - Learning about observability / Have used monitoring tools,OpenTelemetry Website,Official OpenTelemetry SDK,Production,OTel Collector-k8s (otel/opentelemetry-collector-k8s),Javascript/Typescript,"Azure serverless environments (Functions, Azure Container Apps, etc.)",Mobile,4,Documentation was unclear,4,Configuring SDK,4,Installing plugins,4,Configuring the connectors,"Necesary more spanish, an more esy"
1/2/2025 18:21:26,100-1000,Technology,Developer,No,Yes,Intermediate - We are setting up an Observability practice,"OpenTelemetry Website, Twitter",Official OpenTelemetry SDK,"Local, Test/Staging, Production",OTel Collector-k8s (otel/opentelemetry-collector-k8s),".NET, Go","Kubernetes, Azure","Backend, Operations/Infrastructure",2,"Documentation was unclear, Enriching auto-generated telemetry, Using Metrics API",1,N/A,1,Exports way too much data,2,No issues,"Documentation is sometime confusing/wrong (e.g https://opentelemetry.io/docs/languages/net/shim/#creating-independent-spans is completely incorrect)
Lack of guidance when usecases fall out of the very basic ""trace requests"" usecases. Handling of high volume or sampling of data is tricky"
1/2/2025 23:03:41,100-1000,Technology,Developer,Yes,No,Expert - We have a well-established Observability practice,"OpenTelemetry Website, GitHub",Vendor OpenTelemetry SDK,"Local, Test/Staging",Grafana Alloy,Go,"Kubernetes, AWS, Azure, GCP","Backend, Operations/Infrastructure",5,"Documentation was unclear, Configuring logging bridge",4,Too many steps required,,don't use,4,"Documentation was unclear, Using OpenTelemetry Collector Transforming Language (OTTL)","Too difficult to adopt otel for all signals, and also improve the documentation. "
1/2/2025 23:31:13,>1000,Technology,Observability,No,Yes,Intermediate - We are setting up an Observability practice,"OpenTelemetry Website, Language implementation documentation page, GitHub",Official OpenTelemetry SDK,"Local, Test/Staging, Production",OTel Collector-contrib (otel/opentelemetry-collector-contrib),"C++, Go, Python, Rust","Kubernetes, VMs","Backend, Operations/Infrastructure",3,"Documentation was unclear, Enriching auto-generated telemetry",3,"Documentation was unclear, Installing instrumentation libraries and plugins",2,Configuring SDK,2,"Configuring the receivers, Configuring the processors, Configuring the connectors, Configuring the extensions",Having the languages at same level 
1/3/2025 1:17:33,0-50,other,DevOps,No,Yes,Intermediate - We are setting up an Observability practice,"OpenTelemetry Website, Language implementation documentation page",Official OpenTelemetry SDK,We don’t use the OpenTelemetry collector,No OpenTelemetry collector,.NET,"Azure serverless environments (Functions, Azure Container Apps, etc.)",Backend,1,Using Metrics API,2,-,1,-,3,No issues,-
1/3/2025 3:09:25,>1000,Retail,Developer,No,Yes,Expert - We have a well-established Observability practice,"OpenTelemetry Website, Vendor documentation",Official OpenTelemetry SDK,Production,OTel Collector-contrib (otel/opentelemetry-collector-contrib),"Java, Javascript/Typescript, PHP",Kubernetes,"Mobile, Backend",2,"Enriching auto-generated telemetry, Using Tracing API, Using Metrics API",3,"Configuring SDK, Debugging",2,"Disabling specific instrumentation libraries, Debugging",2,Using OpenTelemetry Collector Transforming Language (OTTL),"Provide more sample integration recipes: for instance sample code for each language in order to create custom metrics, add attributes to logs and add more informations into traces"
1/3/2025 4:37:34,0-50,Advertisement,Developer,No,Yes,Intermediate - We are setting up an Observability practice,OpenTelemetry Website,Official OpenTelemetry SDK,"Local, Test/Staging, Production",OTel Collector-contrib (otel/opentelemetry-collector-contrib),Go,"GCP serverless environment (Cloud Run Functions, etc.)",Backend,4,"Enriching auto-generated telemetry, Using Metrics API, Configuring resource detectors",4,Exporting data,,did not use auto,4,"Configuring the processors, Configuring the extensions, Configuring to export to vendor","main problem was with otel collector processing and exporting, its a bit confusing, got duplicate datapoint, older datapoint issues a lot"
1/3/2025 5:41:55,100-1000,Travel & Leisure,DevOps,No,Yes,Intermediate - We are setting up an Observability practice,"OpenTelemetry Website, Language implementation documentation page, GitHub",Official OpenTelemetry SDK,"Test/Staging, Production",OTel Collector-contrib (otel/opentelemetry-collector-contrib),".NET, Go, Javascript/Typescript","Kubernetes, GCP","Backend, Operations/Infrastructure",2,Enriching auto-generated telemetry,2,Exporting data,1,Debugging,2,No issues,Setting up telemetry pipelines using the Collector
1/3/2025 7:46:31,>1000,Technology,DevOps,Yes,No,Intermediate - We are setting up an Observability practice,GitHub,Official OpenTelemetry SDK,"Test/Staging, Production",OTel Collector core (otel/opentelemetry-collector),"Go, Java, Python","Kubernetes, AWS, GCP, VMs",Operations/Infrastructure,3,"Documentation was unclear, Context Propagation",3,"Documentation was unclear, Installing instrumentation libraries and plugins",2,Documentation was unclear,3,Configuring the processors,Better documentation for instrumentation and automatic instrumentation and processors would be helpful 
1/3/2025 14:02:39,>1000,Technology,Developer,No,Yes,Beginner - Learning about observability / Have used monitoring tools,GitHub,Official OpenTelemetry SDK,Production,OTel Collector-contrib (otel/opentelemetry-collector-contrib),Go,"Kubernetes, GCP",Backend,2,Configuring logging bridge,2,"Installing instrumentation libraries and plugins, Debugging",2,Debugging,1 (very easy),No issues,Debugging instrumentation
1/5/2025 7:15:31,0-50,Technology,Developer,No,Yes,Intermediate - We are setting up an Observability practice,Language implementation documentation page,Official OpenTelemetry SDK,We don’t use the OpenTelemetry collector,No OpenTelemetry collector,.NET,VMs,"Browser, Backend",2,Context Propagation,2,"Debugging, Exporting data",,none,3,Using OpenTelemetry Collector Transforming Language (OTTL),"Better docs, single source of docs or just information where to find docs related to an instrumentation library, now getting started docs are on the opentelemetry.io page, but to actually understand how to use specific instrumentation libraries you need to find the docs on github.

Now I see that entries on the Registry page link to docs on github. But the registry page includes a lot of libraries, I'm mostly interested in the ""official"" libraries from https://github.com/open-telemetry/opentelemetry-dotnet-contrib, maybe libraries from opentelemetry-dotnet-contrib should be displayed first on the Registry page, instead of ordering by name.

Also each entry on the Registry page take a lot of space so it is not easy to see what libraries are available, just list of directories on github https://github.com/open-telemetry/opentelemetry-dotnet-contrib/tree/main/src shows a better overview of available libraries."
1/6/2025 8:25:43,>1000,Technology,Developer Relations,Yes,Yes,Expert - We have a well-established Observability practice,OpenTelemetry Website,Official OpenTelemetry SDK,Production,Grafana Alloy,"Javascript/Typescript, PHP",Azure,"Operations/Infrastructure, ",5,Configuring resource detectors,5,Documentation was unclear,5,Configuring SDK,5 (very difficult),Documentation was unclear,no
1/6/2025 13:47:04,50-100,other,DevOps,No,No,Intermediate - We are setting up an Observability practice,Language implementation documentation page,Official OpenTelemetry SDK,"Local, Test/Staging",Grafana Alloy,.NET,"Azure serverless environments (Functions, Azure Container Apps, etc.)","Backend, Operations/Infrastructure",2,Context Propagation,2,None,,Don't use,4,"Configuring to export to vendor, Using OpenTelemetry Collector Transforming Language (OTTL)",Nothing comes to mind
1/6/2025 23:53:35,0-50,Advertisement,Developer,No,Yes,Beginner - Learning about observability / Have used monitoring tools,Language implementation documentation page,Official OpenTelemetry SDK,We don’t use the OpenTelemetry collector,No OpenTelemetry collector,"Java, Kotlin",Kubernetes,Backend,4,"Using Tracing API, Using Metrics API",4,"Configuring SDK, Exporting data",,Didn't use auto-instrumentation,3,No issues,- Support for kotlin lang
1/7/2025 6:43:44,100-1000,Technology,Developer,No,No,Beginner - Learning about observability / Have used monitoring tools,OpenTelemetry Website,Official OpenTelemetry SDK,We don’t use the OpenTelemetry collector,No OpenTelemetry collector,"C++, Python, Rust","VMs, Bare metal","Backend, Operations/Infrastructure",4,"Context Propagation, Using Tracing API",2,Exporting data,,Too many steps required,,,"Some developers in our team reported that C++ implementation introduces too many dependencies and it nearly doubles the binary size of our software. This makes us reluctant to adopt the implementations company-wide, and people opt-in for custom implementations."
1/7/2025 7:01:35,50-100,Technology,Developer,No,Yes,Intermediate - We are setting up an Observability practice,OpenTelemetry Website,Official OpenTelemetry SDK,"Local, Test/Staging, Production",OTel Collector-contrib (otel/opentelemetry-collector-contrib),"Go, Javascript/Typescript",Kubernetes,"Backend, Operations/Infrastructure",3,Enriching auto-generated telemetry,3,"Too many steps required, Configuring SDK, Installing instrumentation libraries and plugins",2,"Documentation was unclear, Debugging",2,"Documentation was unclear, Configuring the receivers, Configuring the processors, Configuring the connectors, Configuring the extensions, Configuring to export to vendor","More production examples and real production best practices showing how to name operations, for what to create spans and for what not.
Also, having some nice (not Jaeger) local tool to inspect data would be great. Something like datadog, but just to inspect one file."
1/7/2025 7:13:02,100-1000,Technology,SRE,Yes,Yes,Expert - We have a well-established Observability practice,"GitHub, Peers",Official OpenTelemetry SDK,"Test/Staging, Production",https://github.com/honeycombio/opentelemetry-collector-distro,"Erlang/Elixir, Go, Python, bash/CLI","Kubernetes, AWS, AWS serverless environments (Lambda, Fargate, etc.), Bare metal","Backend, Operations/Infrastructure",4,"Documentation was unclear, Context Propagation, Using Tracing API",4,"Configuring SDK, Debugging, Exporting data",,skip,3,,Troubleshooting problems during SDK setup
1/7/2025 9:33:55,0-50,Technology,Developer,No,No,Beginner - Learning about observability / Have used monitoring tools,Vendor documentation,Official OpenTelemetry SDK,"Local, Test/Staging",OTel Collector-contrib (otel/opentelemetry-collector-contrib),"Go, Java, Javascript/Typescript",Kubernetes,"Backend, Operations/Infrastructure",3,Context Propagation,2,Installing instrumentation libraries and plugins,1,"Disabling specific instrumentation libraries, Installing instrumentation libraries",1 (very easy),"Configuring the processors, Configuring to export to vendor","no auto-instrumentation by default, I prefer explicitly mention which libs to instrument."
1/8/2025 15:28:07,0-50,Finance,DevOps,No,No,Intermediate - We are setting up an Observability practice,OpenTelemetry Website,Official OpenTelemetry SDK,Local,OTel Collector core (otel/opentelemetry-collector),"Go, Javascript/Typescript, PHP",Kubernetes,"Browser, Backend, Operations/Infrastructure",4,"Documentation was unclear, verbose api",4,"Too many steps required, Configuring SDK",3,"Disabling specific instrumentation libraries, Configuring SDK",1 (very easy),No issues,"In the case of PHP SDK, by default all instrumetations are enabled, so to disable it the OTEL_PHP_DISABLED_INSTRUMENTATIONS=all env var must be set, but I think this should be opposite and by default nothing should happen"
1/8/2025 18:50:51,0-50,Technology,SRE,No,Yes,Beginner - Learning about observability / Have used monitoring tools,"OpenTelemetry Website, Workshop",Official OpenTelemetry SDK,"Local, Test/Staging, Production",OTel Collector-contrib (otel/opentelemetry-collector-contrib),"Go, PHP",GCP,"Backend, Operations/Infrastructure",4,"Documentation was unclear, Context Propagation, Using Metrics API, Configuring logging bridge",3,"Documentation was unclear, Too many steps required, Configuring SDK, Installing instrumentation libraries and plugins, Debugging",2,Installing instrumentation libraries,2,"Configuring the receivers, Configuring the processors, Configuring the connectors, Configuring to export to vendor, Using OpenTelemetry Collector Transforming Language (OTTL), lack of comprehensive examples (instead of those unit/function ones)","out of the box versioned examples that work, comprehensive examples, debug faq tips "
1/9/2025 0:01:53,50-100,Technology,Developer,No,Yes,Intermediate - We are setting up an Observability practice,"OpenTelemetry Website, Language implementation documentation page",Official OpenTelemetry SDK,"Test/Staging, Production",OTel Collector OTLP Distro (otel/opentelemetry-collector-otlp),"Go, Java, PHP",Kubernetes,"Mobile, Browser, Backend, Operations/Infrastructure",2,"Using Tracing API, Configuring logging bridge",3,"Too many steps required, Installing instrumentation libraries and plugins, Exporting data",4,"Disabling specific instrumentation libraries, Installing instrumentation libraries, Installing plugins, Exporting data",3,"Documentation was unclear, Configuring the extensions, Configuring to export to vendor",The configuration is relatively complex and the version is updated too quickly
1/12/2025 10:26:19,0-50,Healthcare,DevOps,No,No,Beginner - Learning about observability / Have used monitoring tools,youtube,Official OpenTelemetry SDK,Local,OTel Collector-contrib (otel/opentelemetry-collector-contrib),"Javascript/Typescript, Python, Ruby","Kubernetes, GCP",Browser,4,Using Metrics API,5,"Too many steps required, Debugging",5,Exporting data,5 (very difficult),,"The best would be setup create some video tutorials where an application observability is put together on kubernetes.
"
1/13/2025 12:05:11,100-1000,Technology,SRE,No,Yes,Intermediate - We are setting up an Observability practice,"OpenTelemetry Website, Language implementation documentation page, GitHub, Vendor documentation",Vendor OpenTelemetry SDK,"Test/Staging, Production",Grafana Alloy,"Go, Javascript/Typescript, Python","Kubernetes, GCP, GCP serverless environment (Cloud Run Functions, etc.)",Operations/Infrastructure,3,"legacy apps that do not have SDK available, various languages ",3,Installing instrumentation libraries and plugins,,Installing instrumentation libraries,2,Configuring the processors,-
1/13/2025 12:36:39,100-1000,Technology,SRE,No,Yes,Intermediate - We are setting up an Observability practice,OpenTelemetry Website,I don’t know,"Test/Staging, Production",OTel Collector-contrib (otel/opentelemetry-collector-contrib),"Go, Python",Kubernetes,"Backend, Operations/Infrastructure",3,Haven't used instrumentation.,3,Don't use SDK,,Don't use instrumentation,2,Using OpenTelemetry Collector Transforming Language (OTTL),"Maybe having a repository of use cases for collector pipelines, e.g. replacing statsd-exporter, or scraping and enriching KSM metrics. I would love to help on creating this, as these are real examples that we have written pipelines for!"
1/13/2025 14:48:26,>1000,Technology,Observability,No,Yes,Expert - We have a well-established Observability practice,"GitHub, We’ve been doing it for a long time, so we don’t really fit neatly into those categories. We predate the useful websites and language specific documentation. ",Custom OpenTelemetry SDK,"Local, Test/Staging, Production","A custom build without the ocb, although we should probably switch to ocb instead ","Go, Java, Javascript/Typescript, Lua, Python, Ruby, Rust, Swift","Kubernetes, GCP, GCP serverless environment (Cloud Run Functions, etc.)","Mobile, Browser, Backend, Operations/Infrastructure",4,"Documentation was unclear, Enriching auto-generated telemetry, Using Metrics API, Configuring logging bridge",4,"Documentation was unclear, Configuring SDK, Exporting data",3,Debugging,3,"Documentation was unclear, Configuring the receivers, Configuring the processors, Configuring the connectors, Configuring the extensions, Configuring to export to vendor, Using OpenTelemetry Collector Transforming Language (OTTL)",It’s such a big project I’m honestly not sure where to start recommending improvements 
1/14/2025 5:33:45,>1000,Media,Developer Relations,Yes,Yes,Expert - We have a well-established Observability practice,"OpenTelemetry Website, GitHub",I don’t know,We don’t use the OpenTelemetry collector,No OpenTelemetry collector,"PHP, Python, Rust",Kubernetes,Mobile,5,Documentation was unclear,5,"Documentation was unclear, Exporting data",5,"Documentation was unclear, Configuring SDK",5 (very difficult),"Configuring to export to vendor, Using OpenTelemetry Collector Transforming Language (OTTL)",Where is Recovery me ?
1/14/2025 14:51:16,50-100,Media,Developer,No,No,Intermediate - We are setting up an Observability practice,"OpenTelemetry Website, Language implementation documentation page, GitHub",Official OpenTelemetry SDK,Test/Staging,AWS ADOT,Javascript/Typescript,"AWS, AWS serverless environments (Lambda, Fargate, etc.)","Backend, Operations/Infrastructure",1,Documentation was unclear,1,Debugging,2,"Documentation was unclear, Documentation was unclear and had a lot of difficulty when trying to set up auto-instrumentation for Lambda using AWS SAM. For non-Lambda code it was extremely easy!",2,No issues,Nothing major.
1/15/2025 5:17:51,0-50,Technology,Developer,No,Yes,Intermediate - We are setting up an Observability practice,"OpenTelemetry Website, GitHub",Official OpenTelemetry SDK,"Local, Test/Staging, Production",OTel Collector-contrib (otel/opentelemetry-collector-contrib),Javascript/Typescript,Azure,"Mobile, Browser, Backend",4,"Documentation was unclear, Enriching auto-generated telemetry, Using Tracing API",4,"Configuring SDK, Installing instrumentation libraries and plugins, Debugging",4,"Disabling specific instrumentation libraries, Configuring SDK, Installing instrumentation libraries, Installing plugins",3,,"Getting telemetry out of your application

- Configuring and using resource detectors

- Troubleshooting problems during SDK setup"
1/15/2025 9:21:54,0-50,Technology,other,No,Yes,Intermediate - We are setting up an Observability practice,OpenTelemetry Website,Official OpenTelemetry SDK,"Local, Production",OTel Collector-contrib (otel/opentelemetry-collector-contrib),"Go, Javascript/Typescript, Rust","Kubernetes, Containers","Mobile, Browser, Backend, Operations/Infrastructure, edge/iot",2,Context Propagation,3,Initialization can get very verbose but otherwise manageable once its done,1,no issues,1 (very easy),,"I don't have much here. After coming from a number of different providers, I was fairly satisfied with how easy it was to get a minimal ecosystem up and running."
1/15/2025 12:42:55,0-50,Technology,Developer,No,Yes,Expert - We have a well-established Observability practice,Language implementation documentation page,Official OpenTelemetry SDK,We don’t use the OpenTelemetry collector,No OpenTelemetry collector,"Go, Python",Kubernetes,"Backend, Operations/Infrastructure",3,Context Propagation,3,"Documentation was unclear, Debugging",,N/A,2,Configuring to export to vendor,"My biggest request is more common examples in cookbooks. Simple things like starting traces, propagating baggage. Every time I feel I have to reference my old code or GitHub search for examples"
1/15/2025 12:56:00,100-1000,Finance,DevOps,No,Yes,Intermediate - We are setting up an Observability practice,"Language implementation documentation page, GitHub, Vendor documentation",Official OpenTelemetry SDK,"Test/Staging, Production",RedHat operator,"Java, Javascript/Typescript",Kubernetes,"Backend, Operations/Infrastructure",2,Enriching auto-generated telemetry,3,"Installing instrumentation libraries and plugins, Exporting data",1,"Disabling specific instrumentation libraries, Configuring SDK",2,No issues,Configuring instrumentation 
1/15/2025 13:35:54,0-50,other,SRE,No,Yes,Intermediate - We are setting up an Observability practice,"OpenTelemetry Website, Language implementation documentation page, GitHub",Official OpenTelemetry SDK,"Local, Test/Staging, Production",OTel Collector core (otel/opentelemetry-collector),"Go, Java, Javascript/Typescript","Kubernetes, AWS, Bare metal","Browser, Backend, Operations/Infrastructure",3,none,2,none,2,please make those optional...,2,,Debug and testing complex rules
1/15/2025 14:05:38,100-1000,Technology,Observability,No,Yes,Expert - We have a well-established Observability practice,Googling furiously ,I don’t know,"Test/Staging, Production",OTel Collector-contrib (otel/opentelemetry-collector-contrib),"Go, Rust, zig","Kubernetes, home made container","Backend, Operations/Infrastructure, databases",3,"Documentation was unclear, Configuring logging bridge, Configuring resource detectors",4,Documentation was unclear,3,Documentation was unclear,4,"Documentation was unclear, Configuring the receivers, Configuring the processors, Configuring the connectors, Using OpenTelemetry Collector Transforming Language (OTTL)","- documentation needs A LOT more REAL examples
- clarify when to use what
- generally pretty messy and too many layers of indirection
- setting up pipelines beyond hello world
- best practices "
1/15/2025 14:35:38,0-50,Automotive,Developer,No,Yes,Intermediate - We are setting up an Observability practice,"Language implementation documentation page, GitHub, Vendor documentation, YouTube",Custom OpenTelemetry SDK,We don’t use the OpenTelemetry collector,No OpenTelemetry collector,".NET, Python","Azure, Azure serverless environments (Functions, Azure Container Apps, etc.)","Backend, Operations/Infrastructure",2,"Documentation was unclear, Using Metrics API",2,None,2,None,,,None come to mind
1/15/2025 14:42:19,>1000,Finance,other,No,Yes,Intermediate - We are setting up an Observability practice,OpenTelemetry Website,Official OpenTelemetry SDK,We don’t use the OpenTelemetry collector,No OpenTelemetry collector,Java,"Kubernetes, AWS",Backend,1,None yet,1,Not using but can't skip the question,1,None,1 (very easy),No issues,Nothing yet- we are not far enough in the journey to get our customers' feedback in a productive manner
1/15/2025 14:44:30,0-50,Technology,DevOps,Yes,Yes,Expert - We have a well-established Observability practice,Blogs,Vendor OpenTelemetry SDK,We don’t use the OpenTelemetry collector,No OpenTelemetry collector,Javascript/Typescript,"Kubernetes, AWS","Browser, Backend",4,"Documentation was unclear, Using Tracing API, Using Metrics API, Configuring resource detectors",5,"Documentation was unclear, Too many steps required, Configuring SDK, Installing instrumentation libraries and plugins, Debugging",3,"Documentation was unclear, Too many steps required, Configuring SDK",3,Documentation was unclear,Get someone to redesign the docs site and rewrite the docs
1/15/2025 15:09:19,0-50,Healthcare,Developer,No,Yes,Intermediate - We are setting up an Observability practice,OpenTelemetry Website,Official OpenTelemetry SDK,We don’t use the OpenTelemetry collector,No OpenTelemetry collector,"Java, Javascript/Typescript",Kubernetes,Backend,4,"Context Propagation, Using Tracing API",3,Configuring SDK,2,Disabling specific instrumentation libraries,,,Pipeline 
1/15/2025 15:22:18,0-50,Technology,Developer,Yes,Yes,Expert - We have a well-established Observability practice,"OpenTelemetry Website, Google, blogs, YouTube ",Official OpenTelemetry SDK,"Local, Test/Staging, Production",OTel Collector OTLP Distro (otel/opentelemetry-collector-otlp),"Go, Javascript/Typescript, Python","Kubernetes, AWS, AWS serverless environments (Lambda, Fargate, etc.), VMs","Mobile, Browser, Backend, Operations/Infrastructure",1,Configuring logging bridge,2,Some bugs in auto instrumentation,1,Some bugs in auto-instrumentation ,1 (very easy),No issues,"Stability of sdks across (with traces, logs, metrics support) all major languages to show maturity."
1/15/2025 17:36:15,100-1000,other,DevOps,No,Yes,Expert - We have a well-established Observability practice,"OpenTelemetry Website, Language implementation documentation page",Official OpenTelemetry SDK,"Local, Test/Staging, Production",OTel Collector-contrib (otel/opentelemetry-collector-contrib),".NET, Go, Javascript/Typescript, Python","Kubernetes, VMs","Browser, Backend, Operations/Infrastructure",1,Configuring logging bridge,1,Debugging,,Disabling specific instrumentation libraries,2,"Configuring the processors, Configuring the connectors",More samples
1/15/2025 19:11:38,100-1000,Technology,Developer,No,Yes,Intermediate - We are setting up an Observability practice,"OpenTelemetry Website, GitHub",Official OpenTelemetry SDK,"Test/Staging, Production",Custom build (ocb),"Go, Python","Kubernetes, AWS, VMs","Backend, Operations/Infrastructure",3,vendor support - esp automatic attribute modifications,4,Configuring SDK,2,Documentation was unclear,2,"Configuring the connectors, ocb releases sometimes out of sync with collector","Docs on generating metrics from other signals are sparse, impls incomplete E.g. signaltometrics connector"
1/15/2025 23:00:17,>1000,other,Platform Engineering,No,Yes,Intermediate - We are setting up an Observability practice,"OpenTelemetry Website, GitHub",Official OpenTelemetry SDK,"Local, Production",OTel Collector-contrib (otel/opentelemetry-collector-contrib),".NET, Java, Javascript/Typescript, Python","Kubernetes, VMs",Operations/Infrastructure,3,"Documentation was unclear, Enriching auto-generated telemetry, Configuring logging bridge",3,"Documentation was unclear, Too many steps required, Configuring SDK",3,"Documentation was unclear, Too many steps required, Disabling specific instrumentation libraries, Configuring SDK",1 (very easy),"Configuring the extensions, Using OpenTelemetry Collector Transforming Language (OTTL)",.NET instrumentation
1/15/2025 23:46:43,0-50,Technology,Developer,No,Yes,Intermediate - We are setting up an Observability practice,"OpenTelemetry Website, Language implementation documentation page, GitHub, Vendor documentation",Official OpenTelemetry SDK,We don’t use the OpenTelemetry collector,No OpenTelemetry collector,"Javascript/Typescript, PHP, Rust","GCP, platform.sh","Mobile, Browser, Backend, Operations/Infrastructure",3,"Documentation was unclear, Enriching auto-generated telemetry, Context Propagation",3,"Documentation was unclear, Too many steps required, Configuring SDK, Installing instrumentation libraries and plugins",3,"Documentation was unclear, Disabling specific instrumentation libraries",,,Setting up the underlying protocol libraries is quite hard i most languages.
1/16/2025 2:36:23,100-1000,Media,Observability,No,Yes,Expert - We have a well-established Observability practice,OpenTelemetry Website,Official OpenTelemetry SDK,"Test/Staging, Production",Custom build (ocb),"Java, Javascript/Typescript","AWS, AWS serverless environments (Lambda, Fargate, etc.), Heroku","Backend, Operations/Infrastructure",2,"Enriching auto-generated telemetry, Different versions of semantic conventions in use by SDKs",3,"Debugging, Exporting data",1,Issues with JS import order,1 (very easy),No issues,"I would _love_ an easier local developer set up to help engineers get started and debug and use OTel locally to get the most value from it. We don't yet support tracing centrally, but there's no reason engineers couldn't benefit from it locally! I know the collector can do it, but not many teams are using docker here so bringing all the components together is a bit of an exercise."
1/16/2025 2:47:39,100-1000,Media,SRE,No,Yes,Expert - We have a well-established Observability practice,OpenTelemetry Website,Official OpenTelemetry SDK,"Test/Staging, Production",OTel Collector core (otel/opentelemetry-collector),Javascript/Typescript,"AWS, Heroku","Browser, Backend",4,Enriching auto-generated telemetry,3,"Configuring SDK, Debugging",1,Augmenting auto-instrumentations with our own data,3,No issues,"It's been generally good however I have a few gripes with the setup of the SDKs. It may be that there's no documentation on this but we're trying to use the SDK without leaning on the built-in OTEL_ environment variables, this isn't easy and it's possible for rogue environment variables to mess with our configuration which we'd rather maintain in the code itself. I think the ability to turn _off_ environment variables would be useful.

We also had issues with augmenting the existing instrumentation, the main example being to add the first part of the request path to fetch instrumentations in JavaScript. It's just not possible from what we can tell as the auto-instrumentations are really strict about the data format."
1/16/2025 3:29:53,100-1000,Technology,Developer,Yes,Yes,Expert - We have a well-established Observability practice,OpenTelemetry Website,Official OpenTelemetry SDK,"Local, Test/Staging, Production",datadog,Go,Kubernetes,"Backend, Operations/Infrastructure",4,"Documentation was unclear, Configuring logging bridge",4,"Documentation was unclear, the otel logging sdk for go is not very ergonomic, and the slog bridge feels clunky",,"we don't autoinstrument, I skipped the previous question but this is required",2,"datadog's otel collector is quite simple to use, locally we use alloy and that is not that well documented, I'd still consider it easy-ish though","focusing on the go sdks:
* tracing is very nice, feels natural to use
* metrics are middle of the road, the api feels clunkier than prometheus, so I needed to develop wrappers to offer a more prometheus-like experience on top of otel metrics
* logging feels just bad, slog is an amazing interface and at least there's the slog bridge, but it's not something I enjoy using

overall documentation is just very lackluster, it only has ""toy"" examples and there's barely any info about how to correctly manage the lifecycle of providers, how to correctly inject and extract info from the contexts, especially on api environments, how to trace and get metrics for api calls, with correct error statuses, etc."
1/16/2025 10:17:48,100-1000,Technology,Developer,No,Yes,Intermediate - We are setting up an Observability practice,"OpenTelemetry Website, Language implementation documentation page",Official OpenTelemetry SDK,"Test/Staging, Production",OTel Collector-contrib (otel/opentelemetry-collector-contrib),"Go, Javascript/Typescript",Kubernetes,"Browser, Backend, Operations/Infrastructure",2,Documentation was unclear,2,Debugging,1,Documentation was unclear,2,"Documentation was unclear, Configuring the receivers, Configuring the processors","Clear, unified, and more conveniently searchable receiver documentation"
1/16/2025 10:31:41,0-50,Technology,Developer,No,Yes,Intermediate - We are setting up an Observability practice,Qiita,Vendor OpenTelemetry SDK,"Test/Staging, Production",OTel Collector-k8s (otel/opentelemetry-collector-k8s),Kotlin,"Kubernetes, GCP, VMs","Backend, Operations/Infrastructure",2,Configuring resource detectors,3,"Documentation was unclear, Too many steps required, Configuring SDK, Installing instrumentation libraries and plugins, Debugging, Exporting data, ",,"Documentation was unclear, Too many steps required, Disabling specific instrumentation libraries, Configuring SDK, Installing instrumentation libraries, Installing plugins, Debugging, Exporting data, ",3,"Documentation was unclear, Configuring the receivers, Configuring the processors, Configuring the connectors, Configuring the extensions, Configuring to export to vendor, Using OpenTelemetry Collector Transforming Language (OTTL), No issues, ",Configuring instrumentation
1/16/2025 10:57:48,>1000,Finance,Observability,Yes,Yes,Expert - We have a well-established Observability practice,OpenTelemetry Website,Official OpenTelemetry SDK,"Test/Staging, Production",OTel Collector-k8s (otel/opentelemetry-collector-k8s),"Go, Java, Python","Kubernetes, Azure","Browser, Backend, Operations/Infrastructure",4,"Documentation was unclear, Configuring resource detectors",2,Too many steps required,2,Installing plugins,2,No issues,"Following the document, more examples could help"
1/16/2025 13:20:47,100-1000,Automotive,Observability,No,Yes,Intermediate - We are setting up an Observability practice,"OpenTelemetry Website, Language implementation documentation page, GitHub",Official OpenTelemetry SDK,"Test/Staging, Production",Custom build (ocb),"Go, Javascript/Typescript, Python",Kubernetes,"Backend, Operations/Infrastructure",3,Context Propagation,3,Configuring SDK,3,N/A,4,"Configuring the receivers, Configuring the processors, Configuring the extensions","The maturity of the collector can make it difficult to keep up. There are API changes as well as proposed changes to various components (exporterhelper is currently being broken out into separate helpers for queuing?). As a user it is difficult to know what the current state is and the direction. For example, there may be several GitHub issues that may or may not be related to a question I am trying to answer but they are often left seemingly unresolved."
1/17/2025 2:46:13,100-1000,Technology,Developer,No,Yes,Intermediate - We are setting up an Observability practice,"OpenTelemetry Website, GitHub, Vendor documentation",Official OpenTelemetry SDK,"Local, Test/Staging, Production",OTel Collector-contrib (otel/opentelemetry-collector-contrib),Python,"Kubernetes, AWS",Backend,4,Documentation was unclear,4,"Documentation was unclear, Installing instrumentation libraries and plugins, Debugging",3,Sanic is not supported,2,,Better documentation for Python that is not for Flask
1/18/2025 0:33:25,0-50,Technology,DevOps,Yes,Yes,Beginner - Learning about observability / Have used monitoring tools,GitHub,Official OpenTelemetry SDK,Production,OTel Collector-contrib (otel/opentelemetry-collector-contrib),".NET, Javascript/Typescript",Azure,"Browser, Backend",3,"Documentation was unclear, Context Propagation, Using Tracing API, Using Metrics API",3,Documentation was unclear,3,Configuring SDK,3,No issues,NA
1/18/2025 7:11:37,>1000,Finance,Observability,Yes,Yes,Expert - We have a well-established Observability practice,"OpenTelemetry Website, GitHub",Official OpenTelemetry SDK,"Local, Test/Staging, Production",Custom build (ocb),".NET, Java, Javascript/Typescript, Python","Kubernetes, VMs, Bare metal","Backend, Operations/Infrastructure",3,Documentation was unclear,3,"Documentation was unclear, Installing instrumentation libraries and plugins, Exporting data",1,easy,5 (very difficult),"Documentation was unclear, Configuring the receivers, Configuring the processors, Using OpenTelemetry Collector Transforming Language (OTTL)",Configuring and using resource detectors
1/18/2025 22:02:24,0-50,Technology,Developer,No,Yes,Beginner - Learning about observability / Have used monitoring tools,OpenTelemetry Website,Official OpenTelemetry SDK,Test/Staging,OTel Collector core (otel/opentelemetry-collector),Javascript/Typescript,Bare metal,"Browser, Backend, Operations/Infrastructure",3,"Documentation was unclear, Context Propagation",3,Debugging,2,Disabling specific instrumentation libraries,2,Configuring the processors, Troubleshooting problems during SDK setup
1/19/2025 0:32:25,>1000,Technology,Platform Engineering,No,Yes,Intermediate - We are setting up an Observability practice,"OpenTelemetry Website, GitHub",Official OpenTelemetry SDK,"Test/Staging, Production",Custom build (ocb),"Go, Java, Javascript/Typescript, Python","AWS, VMs","Backend, Operations/Infrastructure",2,"Context Propagation, Configuring logging bridge",3,Installing instrumentation libraries and plugins,3,"Installing instrumentation libraries, Debugging, Exporting data",2,Using OpenTelemetry Collector Transforming Language (OTTL),More example usages documented
1/19/2025 4:06:59,100-1000,Travel & Leisure,Developer,No,Yes,Expert - We have a well-established Observability practice,Vendor documentation,Official OpenTelemetry SDK,Production,OTel Collector OTLP Distro (otel/opentelemetry-collector-otlp),"Java, Python","Kubernetes, AWS serverless environments (Lambda, Fargate, etc.)",Backend,2,Using Metrics API,2,Debugging,2,Disabling specific instrumentation libraries,3,"Configuring the receivers, Configuring the processors, Configuring the connectors","Metrics API should be simplified. For example, to provide the metrics annotations."
1/20/2025 5:45:19,0-50,Technology,Developer,No,Yes,Intermediate - We are setting up an Observability practice,GitHub,Official OpenTelemetry SDK,"Test/Staging, Production",AWS ADOT,Erlang/Elixir,"AWS serverless environments (Lambda, Fargate, etc.)",Backend,3,"Documentation was unclear, Configuring logging bridge",3,"Too many steps required, Installing instrumentation libraries and plugins",3,"Documentation was unclear, Installing instrumentation libraries",5 (very difficult),"Documentation was unclear, Configuring the receivers, Configuring the processors, Configuring the connectors, Configuring the extensions, Configuring to export to vendor","1. Installing the SDK and seeing the traces/metrics/logs in the vendor;
2. Having guides on good practices and how to implementit."
1/20/2025 5:52:13,0-50,Research,Developer,Yes,Yes,Beginner - Learning about observability / Have used monitoring tools,"OpenTelemetry Website, ",I don’t know,Local,English,Google,Bd,Mobile,2,Any space,2,Configuring SDK,2,"Too many steps required, Configuring SDK, Installing instrumentation libraries, Installing plugins",1 (very easy),"Configuring the receivers, Configuring the extensions, Configuring to export to vendor, No issues",Grameen and Robi 
1/20/2025 6:55:23,0-50,Automotive,Platform Engineering,No,Yes,Intermediate - We are setting up an Observability practice,"OpenTelemetry Website, GitHub",Official OpenTelemetry SDK,"Local, Test/Staging, Production",OTel Collector-contrib (otel/opentelemetry-collector-contrib),"Go, Python, Scala ","Kubernetes, GCP",Operations/Infrastructure,4,"Configuring resource detectors, It was hard to figure out how datadog interprets hotel traces",3,Configuring SDK,,Did not use,4,"Configuring the connectors, Getting k8s attributes to work with istio sidecars was hard.  Getting the datadog connector working was confusing",Better examples of connecting to third-party tracing services
1/20/2025 8:07:58,0-50,Retail,Developer,No,Yes,Expert - We have a well-established Observability practice,"OpenTelemetry Website, Language implementation documentation page, GitHub, Self research, docs, AI",Official OpenTelemetry SDK,Production,OTel Collector core (otel/opentelemetry-collector),"Erlang/Elixir, Rust","AWS, GCP",Backend,4,"Documentation was unclear, Context Propagation, Using Tracing API",5,"Documentation was unclear, Configuring SDK, Exporting data",5,"Documentation was unclear, Configuring SDK",,Configuring to export to vendor,Documentation 
1/20/2025 10:32:16,50-100,Technology,Developer,No,Yes,Expert - We have a well-established Observability practice,"OpenTelemetry Website, Language implementation documentation page",Official OpenTelemetry SDK,"Local, Production",Don't know,Erlang/Elixir,Kubernetes,Backend,3,Documentation was unclear,3,"Installing instrumentation libraries and plugins, Debugging",2,Na,,,"Breaking changes in attribute names between otel versions makes upgrading difficult. Breaking changes in the erlrang/elixir sdk cause issues when clients depend on different versions and libraries can't co-exist.

Overall it has been a good experience "
1/20/2025 10:40:39,50-100,Finance,SRE,No,Yes,Intermediate - We are setting up an Observability practice,"Language implementation documentation page, GitHub, Vendor documentation",Official OpenTelemetry SDK,We don’t use the OpenTelemetry collector,Datadog agent,"Erlang/Elixir, Javascript/Typescript","Kubernetes, AWS","Browser, Backend",2,Configuring logging bridge,2,Debugging,,Nothing,,,Debugging attributes from libraries and integrating them with the vendor (datadog)
1/20/2025 12:23:58,100-1000,other,SRE,No,Yes,Expert - We have a well-established Observability practice,OpenTelemetry Website,Official OpenTelemetry SDK,"Test/Staging, Production",OTel Collector-contrib (otel/opentelemetry-collector-contrib),"Java, Python, Kotlin","AWS, VMs","Mobile, Backend, Operations/Infrastructure",3,Documentation was unclear,1,"Too many steps required, Configuring SDK",1,no issues,2,No issues,Possibility to change the configuration of the Otel Zero-code Agents runtime without restarting the processes.
1/20/2025 14:35:34,100-1000,Retail,Developer,No,Yes,Intermediate - We are setting up an Observability practice,Vendor documentation,Official OpenTelemetry SDK,We don’t use the OpenTelemetry collector,No OpenTelemetry collector,Javascript/Typescript,"AWS serverless environments (Lambda, Fargate, etc.)",Backend,5,"Documentation was unclear, Context Propagation, Using Tracing API, Configuring resource detectors",4,"Installing instrumentation libraries and plugins, Getting correct dependencies ",5,"Disabling specific instrumentation libraries, Configuring SDK, Installing instrumentation libraries, Installing plugins",3,Configuring to export to vendor,More examples to cover the many different ways it can be used.
1/21/2025 4:16:50,>1000,Technology,Observability,Yes,No,Beginner - Learning about observability / Have used monitoring tools,"OpenTelemetry Website, Language implementation documentation page",I don’t know,Test/Staging,Dynatrace Collector,"Javascript/Typescript, Python","Kubernetes, VMs","Browser, Operations/Infrastructure",3,"Documentation was unclear, Context Propagation",2,"Documentation was unclear, Too many steps required",2,"Documentation was unclear, Too many steps required, Installing instrumentation libraries, Debugging",3,"Documentation was unclear, Configuring the receivers, Configuring the processors",doc needs more clearer and the OTel is deployment & instrumentation should be made easier 
1/21/2025 12:07:19,50-100,Technology,Platform Engineering,No,Yes,Intermediate - We are setting up an Observability practice,Language implementation documentation page,Official OpenTelemetry SDK,"Test/Staging, Production",Grafana Alloy,".NET, Java, Javascript/Typescript, Python",Nomad,"Browser, Backend, Operations/Infrastructure",2,"Enriching auto-generated telemetry, Configuring logging bridge",3,Configuring SDK,2,Debugging,2,No issues,Troubleshooting problems during SDK setup
1/21/2025 15:45:17,50-100,Retail,Developer,No,Yes,Intermediate - We are setting up an Observability practice,"OpenTelemetry Website, Language implementation documentation page",Official OpenTelemetry SDK,"Test/Staging, Production",OTel Collector-k8s (otel/opentelemetry-collector-k8s),"Go, Python","Kubernetes, AWS","Mobile, Browser, Backend, Operations/Infrastructure",4,"Documentation was unclear, Context Propagation, Configuring logging bridge",4,"Documentation was unclear, Debugging, Exporting data",2,N/A,3,Configuring the extensions,More in depth docs and examples showing how to use the SDK programatically including things like e.g. baggage propagation that don’t come out of the box but most people would probably want to set up 
1/21/2025 16:41:45,50-100,Technology,Developer,No,Yes,Intermediate - We are setting up an Observability practice,"OpenTelemetry Website, GitHub",Official OpenTelemetry SDK,We don’t use the OpenTelemetry collector,No OpenTelemetry collector,"Javascript/Typescript, Python","Kubernetes, GCP",Backend,5,"Documentation was unclear, Enriching auto-generated telemetry, Using Tracing API, Using Metrics API, Configuring resource detectors",5,"Documentation was unclear, Too many steps required, Configuring SDK, Installing instrumentation libraries and plugins, Debugging, Exporting data",5,"Configuring SDK, Installing instrumentation libraries",,,Better documentation of the contrib ecosystem. Less SDK churn.
1/21/2025 19:45:46,100-1000,Advertisement,Platform Engineering,No,Yes,Intermediate - We are setting up an Observability practice,OpenTelemetry Website,Custom OpenTelemetry SDK,"Test/Staging, Production",OTel Collector-k8s (otel/opentelemetry-collector-k8s),PHP,Kubernetes,Backend,2,Context Propagation,3,Documentation was unclear,2,Debugging,3,Configuring the processors,"Too difficult to adopt OpenTelemery for all signals (tracing, metrics, logs)"
1/22/2025 0:01:45,100-1000,Technology,Observability,Yes,Yes,Expert - We have a well-established Observability practice,OpenTelemetry Website,Official OpenTelemetry SDK,"Local, Test/Staging, Production",OTel Collector-contrib (otel/opentelemetry-collector-contrib),".NET, Go, Java, Python",Kubernetes,Backend,2,"Documentation was unclear, Context Propagation, Using Tracing API, Using Metrics API, Configuring logging bridge",2,"Installing instrumentation libraries and plugins, Debugging",2,Installing instrumentation libraries,2,"Documentation was unclear, Using OpenTelemetry Collector Transforming Language (OTTL)","Too difficult to adopt OpenTelemery for all signals (tracing, metrics, logs)"
1/22/2025 16:01:01,0-50,Advertisement,Developer,No,No,Intermediate - We are setting up an Observability practice,"Language implementation documentation page, Vendor documentation, Prior experience",Official OpenTelemetry SDK,"Local, Test/Staging",AWS ADOT,Erlang/Elixir,"AWS, AWS serverless environments (Lambda, Fargate, etc.)",Backend,3,Understanding best practices,2,Understanding required config for my needs,,Not supported,3,No issues,Best practices should be language specific. Otel metrics and logs arent supported by elixir. And auto instrumentation isnt supported.
1/23/2025 4:21:48,0-50,Technology,Developer,No,Yes,Expert - We have a well-established Observability practice,"Language implementation documentation page, GitHub",Official OpenTelemetry SDK,"Local, Test/Staging, Production",OTel Collector-contrib (otel/opentelemetry-collector-contrib),.NET,"Kubernetes, Docker Swarm",Backend,2,"Documentation was unclear, Enriching auto-generated telemetry, Configuring resource detectors",2,Documentation was unclear,2,"Documentation was unclear, Disabling specific instrumentation libraries, Debugging",1 (very easy),,Configuring instrumentation
1/23/2025 8:14:05,>1000,Healthcare,Developer,No,Yes,Beginner - Learning about observability / Have used monitoring tools,OpenTelemetry Website,Official OpenTelemetry SDK,"Test/Staging, Production",OTel Collector OTLP Distro (otel/opentelemetry-collector-otlp),Java,Azure,Browser,2,"Documentation was unclear, Enriching auto-generated telemetry, Context Propagation, Using Tracing API, Using Metrics API, Configuring logging bridge, Configuring resource detectors",5,"Documentation was unclear, Too many steps required",5,"Documentation was unclear, Too many steps required",2,Documentation was unclear,Better documentation will help. There are are a lot of things to configure where one can go wrong.
1/25/2025 3:58:29,>1000,Media,Observability,Yes,Yes,Intermediate - We are setting up an Observability practice,"OpenTelemetry Website, GitHub, Vendor documentation",Custom OpenTelemetry SDK,"Test/Staging, Production",OTel Collector-contrib (otel/opentelemetry-collector-contrib),".NET, Go, Java, Javascript/Typescript, Python","Kubernetes, AWS, AWS serverless environments (Lambda, Fargate, etc.)","Browser, Backend, Operations/Infrastructure",4,Enriching auto-generated telemetry,4,"Installing instrumentation libraries and plugins, Debugging",2,Installing instrumentation libraries,4,"Configuring the connectors, Configuring the extensions, Configuring to export to vendor",Sincerely this is a journey that I continue exploring! So I want first go in deep around of opentelemetry then help to improve to this adoption for my whole company and projects! 
1/26/2025 20:38:47,>1000,Media,Sales Engineering,Yes,Yes,Expert - We have a well-established Observability practice,"OpenTelemetry Website, Language implementation documentation page, GitHub, Vendor documentation",Official OpenTelemetry SDK,Production,Custom build (ocb),Java,Kubernetes,Mobile,1,Using Tracing API,1,Exporting data,1,Configuring SDK,1 (very easy),Configuring to export to vendor,Fodboldbane 
1/27/2025 6:11:16,0-50,Technology,Developer,No,Yes,Intermediate - We are setting up an Observability practice,OpenTelemetry Website,Official OpenTelemetry SDK,We don’t use the OpenTelemetry collector,Grafana Alloy,"Go, Java, Python","Kubernetes, Bare metal","Backend, Operations/Infrastructure",2,"Context Propagation, Configuring logging bridge",3,Installing instrumentation libraries and plugins,,not relevant,,,"Debugging for certain. Other than that, go sdk is unfortunately bloated and it would be nice to get the ability to work with custom contexts in golang as opposed to having to do a huge refactor of legacy code"
1/28/2025 2:09:20,0-50,Technology,DevOps,No,No,Intermediate - We are setting up an Observability practice,"OpenTelemetry Website, Language implementation documentation page, GitHub",Official OpenTelemetry SDK,"Test/Staging, Production",OTel Collector-contrib (otel/opentelemetry-collector-contrib),Python,VMs,"Backend, Operations/Infrastructure",2,"Documentation was unclear, Context Propagation, Using Metrics API, Configuring logging bridge",2,"Documentation was unclear, Configuring SDK",,didn't used,2,"Documentation was unclear, Configuring the receivers, Configuring to export to vendor",Minimal code example for setting up pipeline with collector (demo is great but it doesn't explain the relation between code and otel config file)
1/28/2025 18:14:45,>1000,Technology,Observability,No,Yes,Expert - We have a well-established Observability practice,"OpenTelemetry Website, Language implementation documentation page, GitHub",Official OpenTelemetry SDK,Production,OTel Collector-contrib (otel/opentelemetry-collector-contrib),"Go, Python",Kubernetes,"Backend, Operations/Infrastructure",4,"Documentation was unclear, Context Propagation, Using Tracing API, Using Metrics API",5,"Documentation was unclear, Too many steps required, Configuring SDK, Installing instrumentation libraries and plugins",,I don't use it,3,"Documentation was unclear, Configuring the receivers, configuring prometheus remote write exporter, errors can be cryptic",open telemetry-demo is not showcasing the latest tech/approaches for each language
1/28/2025 23:45:03,>1000,Technology,DevOps,No,No,Beginner - Learning about observability / Have used monitoring tools,OpenTelemetry Website,Official OpenTelemetry SDK,Test/Staging,No OpenTelemetry collector,"Go, Java, Python","Kubernetes, VMs","Browser, Operations/Infrastructure",3,Documentation was unclear,3,Documentation was unclear,3,Documentation was unclear,3,Documentation was unclear,Debugging instrumentation
1/29/2025 6:41:01,>1000,Technology,Observability,No,Yes,Intermediate - We are setting up an Observability practice,OpenTelemetry Website,Official OpenTelemetry SDK,"Local, Test/Staging, Production",OTel Collector-contrib (otel/opentelemetry-collector-contrib),Go,Kubernetes,"Backend, Operations/Infrastructure",3,Context Propagation,3,Configuring SDK,,NA,1 (very easy),No issues,Instrumentation 
1/29/2025 8:52:58,0-50,Technology,Platform Engineering,Yes,Yes,Intermediate - We are setting up an Observability practice,Vendor documentation,Vendor OpenTelemetry SDK,We don’t use the OpenTelemetry collector,Grafana Alloy,"Go, Rust","Kubernetes, AWS serverless environments (Lambda, Fargate, etc.), Bare metal","Backend, Operations/Infrastructure",4,"Documentation was unclear, Enriching auto-generated telemetry, Context Propagation, Using Tracing API, Using Metrics API, Configuring logging bridge, Configuring resource detectors",4,"Too many steps required, Configuring SDK, Installing instrumentation libraries and plugins, Debugging, Exporting data",4,"Too many steps required, Disabling specific instrumentation libraries, Configuring SDK, Installing instrumentation libraries, Installing plugins, Debugging",3,"Documentation was unclear, Configuring the receivers, Configuring the processors, Configuring the connectors, Configuring the extensions, Configuring to export to vendor, Using OpenTelemetry Collector Transforming Language (OTTL)",Better DX on how to get started but still be able to go down and customize as needed
1/29/2025 9:31:27,50-100,Finance,Developer,No,Yes,Expert - We have a well-established Observability practice,"OpenTelemetry Website, Language implementation documentation page, Vendor documentation",Vendor OpenTelemetry SDK,"Test/Staging, Production",Azure ,.NET,"Kubernetes, Azure, Azure serverless environments (Functions, Azure Container Apps, etc.)",Backend,4,"Documentation was unclear, Enriching auto-generated telemetry",4,"Configuring SDK, Installing instrumentation libraries and plugins",3,"Documentation was unclear, Configuring SDK",2,No issues,"Microsoft integration is still in beta, some integrations need opt -in which isn't well documented."
1/29/2025 9:48:32,100-1000,Retail,SRE,No,Yes,Expert - We have a well-established Observability practice,Language implementation documentation page,Official OpenTelemetry SDK,"Local, Test/Staging, Production",OTel Collector-contrib (otel/opentelemetry-collector-contrib),".NET, Go, Java, Javascript/Typescript, Python, Swift","Kubernetes, VMs, CloudFoundry","Mobile, Browser, Backend, Operations/Infrastructure",2,Enriching auto-generated telemetry,3,"Documentation was unclear, Configuring SDK",2,Disabling specific instrumentation libraries,2,"Configuring the processors, Configuring the connectors, Using OpenTelemetry Collector Transforming Language (OTTL)",Better OTTL documentation. Having basic examples is nice but having more real world examples for pipeline transformations and structuring multiple pipelines for performance reasons would have been very helpful. Same with language specifics I find examples to trump documentation especially when the documentation is telling you directions and telling you the why’s.
1/29/2025 9:57:04,0-50,Technology,Developer,No,Yes,Intermediate - We are setting up an Observability practice,"OpenTelemetry Website, Vendor documentation",Vendor OpenTelemetry SDK,We don’t use the OpenTelemetry collector,No OpenTelemetry collector,.NET,"Azure serverless environments (Functions, Azure Container Apps, etc.)","Browser, Backend, Operations/Infrastructure",2,"Documentation was unclear, Context Propagation, Configuring logging bridge, Configuring resource detectors",1,Installing instrumentation libraries and plugins,,Did not use,,,Documentation on Asp.Net 4.7 integration
1/29/2025 10:46:07,>1000,Retail,Platform Engineering,No,Yes,Intermediate - We are setting up an Observability practice,"OpenTelemetry Website, Language implementation documentation page, GitHub",Official OpenTelemetry SDK,"Local, Test/Staging, Production",OTel Collector-contrib (otel/opentelemetry-collector-contrib),"Go, Java, Javascript/Typescript","Kubernetes, GCP, VMs","Backend, Operations/Infrastructure",4,"Documentation was unclear, Configuring resource detectors, Javascript SDK doesn't support ESM and it's severely lacking maintenance and documentation.",4,"Documentation was unclear, Too many steps required, Configuring SDK, Installing instrumentation libraries and plugins, Configuration format is unclear. For example, which pipeline supports which kind of metrics? Can I just ship prometheus metric to Kafka backend?",2,"Documentation was unclear, Installing instrumentation libraries",5 (very difficult),"Documentation was unclear, Configuring the receivers, Configuring the processors, Configuring the connectors, Configuring the extensions, Configuring to export to vendor, Data compatibility must be thoroughly documented. Which receivers can ship to which backends etc is very unclear.",Javascript ecosystem is soo behind and not well organized. I guess everyone must be using Java or C# right.
1/29/2025 10:58:04,0-50,Technology,Developer,No,Yes,Beginner - Learning about observability / Have used monitoring tools,"Language implementation documentation page, GitHub",Official OpenTelemetry SDK,We don’t use the OpenTelemetry collector,No OpenTelemetry collector,".NET, Javascript/Typescript","AWS, AWS serverless environments (Lambda, Fargate, etc.), Azure, VMs","Mobile, Browser, Backend",2,Context Propagation,1,"Configuring SDK, Exporting data",,Not using,,,"Very simple and obvious - the SDK is fine, capturing is as easy as any other alternative. The problem has been and remains that there is no default place to send them where you can see logs, traces & metrics in one UI. The giant void in this system can't be filled by the OSS stovepipes like Grafana or the commercial platforms that lock you in and cost a ton. Just one basic OSS default server to store , correlate and display logs, traces & metrics and the OTEL push at our company would have succeeded. 

""If you teach a man to fish, make sure he has a place to store and cook them or you've just created a stinky new problem. "" - me"
1/29/2025 12:21:55,50-100,Technology,DevOps,No,Yes,Expert - We have a well-established Observability practice,"OpenTelemetry Website, Language implementation documentation page, GitHub, Vendor documentation",Official OpenTelemetry SDK,"Test/Staging, Production",Datadog,"Go, Java, Python","Kubernetes, AWS","Backend, Operations/Infrastructure",2,"Context Propagation, Using Metrics API, Configuring logging bridge",3,Documentation was unclear,1,"Disabling specific instrumentation libraries, Installing instrumentation libraries",3,Using OpenTelemetry Collector Transforming Language (OTTL),Documentation and examples
1/29/2025 13:45:02,100-1000,Retail,Developer,No,Yes,Expert - We have a well-established Observability practice,"OpenTelemetry Website, Language implementation documentation page, GitHub",Official OpenTelemetry SDK,We don’t use the OpenTelemetry collector,No OpenTelemetry collector,".NET, Rust","Kubernetes, Azure, Azure serverless environments (Functions, Azure Container Apps, etc.)","Browser, Backend, Operations/Infrastructure",3,"Context Propagation, Configuring logging bridge",3,"Too many steps required, Installing instrumentation libraries and plugins, Exporting data",,Don’t use,4,"Configuring the receivers, Configuring the connectors","Too much configuration required, especially in the rust sdk "
1/29/2025 15:52:01,0-50,other,Developer,No,Yes,Beginner - Learning about observability / Have used monitoring tools,OpenTelemetry Website,Official OpenTelemetry SDK,We don’t use the OpenTelemetry collector,No OpenTelemetry collector,"Java, Rust, Kotlin",Kubernetes,Backend,4,"Enriching auto-generated telemetry, Context Propagation, Configuring resource detectors",2,"Configuring SDK, Installing instrumentation libraries and plugins, Interaction with tracing in rust is unclear (which do what). Not necessarily OpenTelemetry’s fault",2,Debugging,1 (very easy),"Configuring the processors, Configuring the extensions",Documenting the level of support of the vendors that ingest OpenTelemetry data.
1/29/2025 19:39:34,50-100,other,Developer,No,Yes,Intermediate - We are setting up an Observability practice,"Language implementation documentation page, GitHub",Official OpenTelemetry SDK,"Test/Staging, Production",AWS ADOT,.NET,"AWS serverless environments (Lambda, Fargate, etc.)",Backend,1,Documentation was unclear,2,Documentation was unclear,1,"Installing instrumentation libraries, Exporting data",4,"Documentation was unclear, Configuring the extensions","Most of the issues were with AWS specific stuff, disabling conflict with xray"
1/29/2025 23:37:28,100-1000,Technology,Developer,No,Yes,Intermediate - We are setting up an Observability practice,"OpenTelemetry Website, GitHub",Official OpenTelemetry SDK,"Test/Staging, Production",OTel Collector-contrib (otel/opentelemetry-collector-contrib),"Go, Java","AWS, AWS serverless environments (Lambda, Fargate, etc.)","Backend, Operations/Infrastructure",2,"Documentation was unclear, Enriching auto-generated telemetry, Too many options for indtrumenting - lacking sane defaults",3,"Documentation was unclear, Configuring SDK, - Java Agent extension docs could be improved. - Go SDK hard to configure (very!)",1,Limiting what's sent. The available environment variables should be better documentet,3,"Documentation was unclear, Using OpenTelemetry Collector Transforming Language (OTTL), Programming in YAML configuration is not ideal.","
- Clear documentation on how to set up a system end to end
- Guide on how to debug which spans, span attributes, and metrics are sent from an application to Otel Collector
- A lot of pages in the Otel docs (both the website and on github) mentions the available config options for features but does not link directly to an overview of them! Every time we need to configure the java agent (say, to drop instrumenting a specific library) we have to spend a lot of time googling
- YAML schema for the otel collector configuration (or if this already exists, link to it in more places!)"
1/29/2025 23:51:23,50-100,other,SRE,No,Yes,Intermediate - We are setting up an Observability practice,OpenTelemetry Website,Official OpenTelemetry SDK,"Test/Staging, Production",OTel Collector-contrib (otel/opentelemetry-collector-contrib),"Java, Javascript/Typescript","Kubernetes, AWS","Browser, Backend, Operations/Infrastructure",2,Node,1,Node.js auto-instrumentation is a bit trickier that for java,1,None,2,No issues,Nothing 
1/30/2025 3:47:51,50-100,Finance,Platform Engineering,No,No,Intermediate - We are setting up an Observability practice,"OpenTelemetry Website, Language implementation documentation page, GitHub",Official OpenTelemetry SDK,We don’t use the OpenTelemetry collector,No OpenTelemetry collector,Javascript/Typescript,"AWS serverless environments (Lambda, Fargate, etc.)","Mobile, Backend, Operations/Infrastructure",4,"Documentation was unclear, Using Tracing API, Configuring resource detectors, There are two many possible combinations of how to configure it. Some vendors are not in sync with the specification.  It's very hard to decide a good best practice. The instrumentation libraries are bloated with a lots of monkey patches and some low quality code.",4,"Documentation was unclear, Configuring SDK, Installing instrumentation libraries and plugins, Debugging, There are two many possible combinations of how to configure it. Some vendors are not in sync with the specification.  It's very hard to decide a good best practice. The instrumentation libraries are bloated with a lots of monkey patches and some low quality code.",4,"Documentation was unclear, The fact that this survey asks very similar questions although for different scopes, confirms the perception that it's hard.",4,"Documentation was unclear, Configuring to export to vendor","- Establish clear best practices and take a firm stance on them.
- Provide well-structured guides on how to start and use the libraries, ensuring a simple yet flexible developer experience (DX).
- Avoid enabling all features by default if they rely on low-quality instrumentation, monkey patching, or similar workarounds.
- Increase outreach efforts: Engage with library authors to embed the OpenTelemetry API directly into their libraries, minimizing the need for monkey patches.
- Stay away from unnecessary complexity: don’t become the next ""Java Enterprise Edition."" Keep it straightforward and avoid excessive indirection.
- It should be crystal clear what needs to be added to a project and why. Developers shouldn't have to go through endless documentation to figure it out.
- Improve documentation by better separating content for end-users and library developers to enhance clarity and usability."
1/31/2025 3:32:00,0-50,Technology,other,No,Yes,Expert - We have a well-established Observability practice,"OpenTelemetry Website, Language implementation documentation page, GitHub, Vendor documentation",Official OpenTelemetry SDK,"Local, Test/Staging, Production",otel/opentelemetry-collector and otel/opentelemetry-collector-k8s,"Java, Javascript/Typescript, PHP","Kubernetes, VMs","Mobile, Browser, Backend, Operations/Infrastructure",3,"Documentation was unclear, Using Metrics API",3,Documentation was unclear,2,Finding what's not discovered and how to easily add it,3,Configuring the extensions,Better more complete Metric API examples with exact results to expect.
2/2/2025 20:43:36,0-50,Technology,Developer,Yes,Yes,Expert - We have a well-established Observability practice,OpenTelemetry Website,Vendor OpenTelemetry SDK,"Local, Production",OTel Collector-contrib (otel/opentelemetry-collector-contrib),"Go, Javascript/Typescript",AWS,"Browser, Backend",2,Using Tracing API,2,Configuring SDK,2,Configuring SDK,3,"Configuring the receivers, Configuring the processors",Configuring instrumentation
2/3/2025 2:56:03,0-50,Technology,Developer,No,Yes,Beginner - Learning about observability / Have used monitoring tools,Vendor documentation,Official OpenTelemetry SDK,We don’t use the OpenTelemetry collector,No OpenTelemetry collector,Erlang/Elixir,Kubernetes,"Browser, Backend",3,"Documentation was unclear, Enriching auto-generated telemetry, Context Propagation, Using Tracing API, Configuring logging bridge, Don't even know what ""resource detectors"" are. Sampling is a bit difficult.",2,"Debugging, Exporting data",2,Installing instrumentation libraries,,,resource detectors